src/main/java/com/example/contractmanagement/ContractManagementApplication.java:7:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/ContractManagementApplication.java:7:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/ContractManagementApplication.java:7:	UseUtilityClass:	UseUtilityClass: All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
src/main/java/com/example/contractmanagement/ContractManagementApplication.java:7:	UseUtilityClass:	UseUtilityClass: All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
src/main/java/com/example/contractmanagement/ContractManagementApplication.java:9:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/ContractManagementApplication.java:9:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/ContractManagementApplication.java:9:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/ContractManagementApplication.java:9:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:14:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:14:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:14:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:14:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:17:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:17:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:17:	LongVariable:	LongVariable: Avoid excessively long variable names like supplierDetailsService
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:17:	LongVariable:	LongVariable: Avoid excessively long variable names like supplierDetailsService
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:20:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'auth' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:20:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'auth' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:26:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'http' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:26:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'http' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:27:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:27:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:27:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:27:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:27:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:27:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:27:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:27:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:27:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:27:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:27:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/SecurityConfigurer.java:27:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/SwaggerConfig.java:13:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/SwaggerConfig.java:13:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/SwaggerConfig.java:13:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/SwaggerConfig.java:13:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/SwaggerConfig.java:15:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/SwaggerConfig.java:15:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/AuthController.java:27:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/controller/AuthController.java:27:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/controller/AuthController.java:27:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/controller/AuthController.java:27:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/controller/AuthController.java:30:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/controller/AuthController.java:30:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/controller/AuthController.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/controller/AuthController.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/controller/AuthController.java:30:	LongVariable:	LongVariable: Avoid excessively long variable names like supplierDetailsService
src/main/java/com/example/contractmanagement/controller/AuthController.java:30:	LongVariable:	LongVariable: Avoid excessively long variable names like supplierDetailsService
src/main/java/com/example/contractmanagement/controller/AuthController.java:33:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/controller/AuthController.java:33:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/controller/AuthController.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/controller/AuthController.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/controller/AuthController.java:33:	LongVariable:	LongVariable: Avoid excessively long variable names like contractAdminDetailsService
src/main/java/com/example/contractmanagement/controller/AuthController.java:33:	LongVariable:	LongVariable: Avoid excessively long variable names like contractAdminDetailsService
src/main/java/com/example/contractmanagement/controller/AuthController.java:37:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/AuthController.java:37:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/AuthController.java:37:	LongVariable:	LongVariable: Avoid excessively long variable names like supplierlogincredentials
src/main/java/com/example/contractmanagement/controller/AuthController.java:37:	LongVariable:	LongVariable: Avoid excessively long variable names like supplierlogincredentials
src/main/java/com/example/contractmanagement/controller/AuthController.java:37:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierlogincredentials' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/AuthController.java:37:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierlogincredentials' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/AuthController.java:42:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/AuthController.java:42:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/AuthController.java:42:	LongVariable:	LongVariable: Avoid excessively long variable names like adminlogincredentials
src/main/java/com/example/contractmanagement/controller/AuthController.java:42:	LongVariable:	LongVariable: Avoid excessively long variable names like adminlogincredentials
src/main/java/com/example/contractmanagement/controller/AuthController.java:42:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'adminlogincredentials' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/AuthController.java:42:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'adminlogincredentials' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/AuthController.java:47:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/AuthController.java:47:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/AuthController.java:52:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/AuthController.java:52:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/AuthController.java:57:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/AuthController.java:57:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/AuthController.java:57:	LongVariable:	LongVariable: Avoid excessively long variable names like supplierlogincredentials
src/main/java/com/example/contractmanagement/controller/AuthController.java:57:	LongVariable:	LongVariable: Avoid excessively long variable names like supplierlogincredentials
src/main/java/com/example/contractmanagement/controller/AuthController.java:57:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierlogincredentials' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/AuthController.java:57:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierlogincredentials' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:23:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/controller/ContractController.java:23:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/controller/ContractController.java:23:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:23:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:26:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/controller/ContractController.java:26:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/controller/ContractController.java:26:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:26:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:30:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/controller/ContractController.java:30:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/controller/ContractController.java:34:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Authorization" appears 9 times in this file; the first occurrence is on line 34
src/main/java/com/example/contractmanagement/controller/ContractController.java:34:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Authorization" appears 9 times in this file; the first occurrence is on line 34
src/main/java/com/example/contractmanagement/controller/ContractController.java:34:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:34:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:34:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'contractDetails' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:34:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'contractDetails' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:34:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:34:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:41:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/controller/ContractController.java:41:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/controller/ContractController.java:44:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:44:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:44:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'status' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:44:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'status' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:44:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:44:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:44:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:44:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:53:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:53:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:62:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:62:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:62:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'contractId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:62:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'contractId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:62:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:62:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:69:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:69:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:69:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:69:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:74:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/controller/ContractController.java:74:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/controller/ContractController.java:77:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:77:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:77:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:77:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:82:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/controller/ContractController.java:82:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/controller/ContractController.java:85:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:85:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:85:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:85:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:92:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/controller/ContractController.java:92:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/controller/ContractController.java:95:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:95:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:95:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:95:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:95:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:95:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:100:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/controller/ContractController.java:100:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/controller/ContractController.java:104:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:104:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ContractController.java:104:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:104:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ContractController.java:105:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/controller/ContractController.java:105:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/controller/ProposalController.java:24:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/controller/ProposalController.java:24:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/controller/ProposalController.java:24:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/controller/ProposalController.java:24:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/controller/ProposalController.java:26:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/controller/ProposalController.java:26:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/controller/ProposalController.java:27:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/controller/ProposalController.java:27:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/controller/ProposalController.java:27:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the service field if you want a default access modifier
src/main/java/com/example/contractmanagement/controller/ProposalController.java:27:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the service field if you want a default access modifier
src/main/java/com/example/contractmanagement/controller/ProposalController.java:27:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/controller/ProposalController.java:27:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/controller/ProposalController.java:29:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/ProposalController.java:29:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/ProposalController.java:30:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Authorization" appears 7 times in this file; the first occurrence is on line 30
src/main/java/com/example/contractmanagement/controller/ProposalController.java:30:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Authorization" appears 7 times in this file; the first occurrence is on line 30
src/main/java/com/example/contractmanagement/controller/ProposalController.java:30:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ProposalController.java:30:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ProposalController.java:30:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'proposal' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:30:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'proposal' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:30:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'requirementId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:30:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'requirementId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:30:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:30:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:30:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:30:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:32:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/ProposalController.java:32:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/ProposalController.java:35:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/ProposalController.java:35:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/ProposalController.java:36:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ProposalController.java:36:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ProposalController.java:36:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:36:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:37:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/ProposalController.java:37:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/ProposalController.java:40:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/ProposalController.java:40:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/ProposalController.java:41:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ProposalController.java:41:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ProposalController.java:41:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'id' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:41:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'id' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:41:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:41:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:41:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/controller/ProposalController.java:41:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/controller/ProposalController.java:42:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/ProposalController.java:42:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/ProposalController.java:45:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/ProposalController.java:45:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/ProposalController.java:46:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ProposalController.java:46:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ProposalController.java:46:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'id' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:46:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'id' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:46:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'status' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:46:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'status' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:46:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:46:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:46:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/controller/ProposalController.java:46:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/controller/ProposalController.java:48:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/ProposalController.java:48:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/ProposalController.java:51:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/ProposalController.java:51:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/ProposalController.java:52:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ProposalController.java:52:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ProposalController.java:52:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:52:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:52:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:52:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:53:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/ProposalController.java:53:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/ProposalController.java:56:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/ProposalController.java:56:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/ProposalController.java:57:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ProposalController.java:57:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ProposalController.java:57:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'id' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:57:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'id' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:57:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'proposalDate' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:57:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'proposalDate' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:57:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'quotation' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:57:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'quotation' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:57:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:57:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:57:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/controller/ProposalController.java:57:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/controller/ProposalController.java:59:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/ProposalController.java:59:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/ProposalController.java:62:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/ProposalController.java:62:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/ProposalController.java:63:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ProposalController.java:63:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/ProposalController.java:63:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:63:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/ProposalController.java:64:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/ProposalController.java:64:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/RequirementController.java:26:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/controller/RequirementController.java:26:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/controller/RequirementController.java:26:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/controller/RequirementController.java:26:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/controller/RequirementController.java:28:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/controller/RequirementController.java:28:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/controller/RequirementController.java:29:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/controller/RequirementController.java:29:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/controller/RequirementController.java:29:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the reqService field if you want a default access modifier
src/main/java/com/example/contractmanagement/controller/RequirementController.java:29:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the reqService field if you want a default access modifier
src/main/java/com/example/contractmanagement/controller/RequirementController.java:29:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/controller/RequirementController.java:29:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/controller/RequirementController.java:31:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/RequirementController.java:31:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/RequirementController.java:32:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Authorization" appears 6 times in this file; the first occurrence is on line 32
src/main/java/com/example/contractmanagement/controller/RequirementController.java:32:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Authorization" appears 6 times in this file; the first occurrence is on line 32
src/main/java/com/example/contractmanagement/controller/RequirementController.java:32:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/RequirementController.java:32:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/RequirementController.java:32:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'requirementD' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:32:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'requirementD' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:32:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:32:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:32:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'typeId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:32:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'typeId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:34:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/RequirementController.java:34:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/RequirementController.java:37:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/RequirementController.java:37:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/RequirementController.java:38:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/RequirementController.java:38:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/RequirementController.java:38:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:38:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:39:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/RequirementController.java:39:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/RequirementController.java:42:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/RequirementController.java:42:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/RequirementController.java:43:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/RequirementController.java:43:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/RequirementController.java:43:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:43:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:43:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:43:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:44:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/RequirementController.java:44:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/RequirementController.java:47:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/RequirementController.java:47:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/RequirementController.java:48:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/RequirementController.java:48:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/RequirementController.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'id' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'id' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:48:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/controller/RequirementController.java:48:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/controller/RequirementController.java:49:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/RequirementController.java:49:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/RequirementController.java:52:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/RequirementController.java:52:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/RequirementController.java:53:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/RequirementController.java:53:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/RequirementController.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'deliveryDate' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'deliveryDate' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'description' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'description' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'id' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'id' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'typeId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'typeId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:53:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/controller/RequirementController.java:53:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/controller/RequirementController.java:55:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/RequirementController.java:55:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/RequirementController.java:59:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/RequirementController.java:59:	UnnecessaryAnnotationValueElement:	UnnecessaryAnnotationValueElement: Avoid the use of value in annotations when its the only element
src/main/java/com/example/contractmanagement/controller/RequirementController.java:60:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/RequirementController.java:60:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/controller/RequirementController.java:60:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'id' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:60:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'id' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:60:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:60:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/controller/RequirementController.java:60:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/controller/RequirementController.java:60:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/controller/RequirementController.java:62:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/controller/RequirementController.java:62:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/exceptionhandling/ContractCreationFailedException.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/ContractCreationFailedException.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/ContractCreationFailedException.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/ContractCreationFailedException.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/ContractCreationFailedException.java:3:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/exceptionhandling/ContractCreationFailedException.java:3:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/exceptionhandling/ContractNotFoundException.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/ContractNotFoundException.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/ContractNotFoundException.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/ContractNotFoundException.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/ContractNotFoundException.java:3:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/exceptionhandling/ContractNotFoundException.java:3:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:9:	UnusedImports:	UnusedImports: Avoid unused imports such as 'java.util.Date'
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:9:	UnusedImports:	UnusedImports: Avoid unused imports such as 'java.util.Date'
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:10:	UnusedImports:	UnusedImports: Avoid unused imports such as 'java.util.LinkedHashMap'
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:10:	UnusedImports:	UnusedImports: Avoid unused imports such as 'java.util.LinkedHashMap'
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:11:	UnusedImports:	UnusedImports: Avoid unused imports such as 'java.util.List'
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:11:	UnusedImports:	UnusedImports: Avoid unused imports such as 'java.util.List'
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:12:	UnusedImports:	UnusedImports: Avoid unused imports such as 'java.util.Map'
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:12:	UnusedImports:	UnusedImports: Avoid unused imports such as 'java.util.Map'
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:13:	UnusedImports:	UnusedImports: Avoid unused imports such as 'java.util.stream.Collectors'
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:13:	UnusedImports:	UnusedImports: Avoid unused imports such as 'java.util.stream.Collectors'
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:15:	UnusedImports:	UnusedImports: Avoid unused imports such as 'org.springframework.http.HttpHeaders'
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:15:	UnusedImports:	UnusedImports: Avoid unused imports such as 'org.springframework.http.HttpHeaders'
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:18:	UnusedImports:	UnusedImports: Avoid unused imports such as 'org.springframework.web.bind.MethodArgumentNotValidException'
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:18:	UnusedImports:	UnusedImports: Avoid unused imports such as 'org.springframework.web.bind.MethodArgumentNotValidException'
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:23:	UnusedImports:	UnusedImports: Avoid unused imports such as 'org.springframework.web.context.request.WebRequest'
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:23:	UnusedImports:	UnusedImports: Avoid unused imports such as 'org.springframework.web.context.request.WebRequest'
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:26:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:26:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:26:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:26:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:28:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:28:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:48:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:48:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'ex' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'ex' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:48:	ShortVariable:	ShortVariable: Avoid variables with short names like ex
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:48:	ShortVariable:	ShortVariable: Avoid variables with short names like ex
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:54:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:54:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:54:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'ex' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:54:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'ex' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:54:	ShortVariable:	ShortVariable: Avoid variables with short names like ex
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:54:	ShortVariable:	ShortVariable: Avoid variables with short names like ex
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:60:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:60:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:60:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'ex' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:60:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'ex' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:60:	ShortVariable:	ShortVariable: Avoid variables with short names like ex
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:60:	ShortVariable:	ShortVariable: Avoid variables with short names like ex
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:66:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:66:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:66:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'ex' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:66:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'ex' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:66:	ShortVariable:	ShortVariable: Avoid variables with short names like ex
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:66:	ShortVariable:	ShortVariable: Avoid variables with short names like ex
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:74:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:74:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:74:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'ex' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:74:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'ex' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:74:	ShortVariable:	ShortVariable: Avoid variables with short names like ex
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:74:	ShortVariable:	ShortVariable: Avoid variables with short names like ex
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:80:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:80:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:80:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'ex' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:80:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'ex' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:80:	ShortVariable:	ShortVariable: Avoid variables with short names like ex
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:80:	ShortVariable:	ShortVariable: Avoid variables with short names like ex
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:89:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:89:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:89:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'ex' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:89:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'ex' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:89:	ShortVariable:	ShortVariable: Avoid variables with short names like ex
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:89:	ShortVariable:	ShortVariable: Avoid variables with short names like ex
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:95:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:95:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:95:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'ex' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:95:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'ex' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:95:	ShortVariable:	ShortVariable: Avoid variables with short names like ex
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:95:	ShortVariable:	ShortVariable: Avoid variables with short names like ex
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:101:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:101:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:101:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'ex' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:101:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'ex' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:101:	ShortVariable:	ShortVariable: Avoid variables with short names like ex
src/main/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandler.java:101:	ShortVariable:	ShortVariable: Avoid variables with short names like ex
src/main/java/com/example/contractmanagement/exceptionhandling/NoCreatedContractsException.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/NoCreatedContractsException.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/NoCreatedContractsException.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/NoCreatedContractsException.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/NoCreatedContractsException.java:3:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/exceptionhandling/NoCreatedContractsException.java:3:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/exceptionhandling/PasswordInvalidException.java:5:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/PasswordInvalidException.java:5:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/PasswordInvalidException.java:5:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/PasswordInvalidException.java:5:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/PasswordInvalidException.java:5:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/exceptionhandling/PasswordInvalidException.java:5:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/exceptionhandling/ProposalAlreadyExistsException.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/ProposalAlreadyExistsException.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/ProposalAlreadyExistsException.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/ProposalAlreadyExistsException.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/ProposalAlreadyExistsException.java:3:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/exceptionhandling/ProposalAlreadyExistsException.java:3:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/exceptionhandling/ProposalNotFoundException.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/ProposalNotFoundException.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/ProposalNotFoundException.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/ProposalNotFoundException.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/ProposalNotFoundException.java:3:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/exceptionhandling/ProposalNotFoundException.java:3:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/exceptionhandling/ProposalsEmptyException.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/ProposalsEmptyException.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/ProposalsEmptyException.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/ProposalsEmptyException.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/ProposalsEmptyException.java:3:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/exceptionhandling/ProposalsEmptyException.java:3:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/exceptionhandling/RequirementsEmptyException.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/RequirementsEmptyException.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/RequirementsEmptyException.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/RequirementsEmptyException.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/RequirementsEmptyException.java:3:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/exceptionhandling/RequirementsEmptyException.java:3:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/exceptionhandling/SupplierNotFoundException.java:5:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/SupplierNotFoundException.java:5:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/SupplierNotFoundException.java:5:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/SupplierNotFoundException.java:5:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/SupplierNotFoundException.java:5:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/exceptionhandling/SupplierNotFoundException.java:5:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/exceptionhandling/UnauthorizedException.java:5:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/UnauthorizedException.java:5:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/exceptionhandling/UnauthorizedException.java:5:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/UnauthorizedException.java:5:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/exceptionhandling/UnauthorizedException.java:5:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/exceptionhandling/UnauthorizedException.java:5:	MissingSerialVersionUID:	MissingSerialVersionUID: Classes implementing Serializable should set a serialVersionUID
src/main/java/com/example/contractmanagement/model/Answers.java:23:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/Answers.java:23:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/Answers.java:27:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Answers.java:27:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Answers.java:27:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/model/Answers.java:27:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/model/Answers.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Answers.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Answers.java:34:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Answers.java:34:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Answers.java:38:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Answers.java:38:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Answers.java:42:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Answers.java:42:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/AuthResponse.java:16:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/AuthResponse.java:16:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/AuthResponse.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/AuthResponse.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/AuthResponse.java:18:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/AuthResponse.java:18:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/AuthResponse.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/AuthResponse.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/AuthResponse.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/AuthResponse.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contract.java:27:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/Contract.java:27:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/Contract.java:31:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contract.java:31:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contract.java:31:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/model/Contract.java:31:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/model/Contract.java:36:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contract.java:36:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contract.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contract.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contract.java:46:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contract.java:46:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contract.java:46:	LongVariable:	LongVariable: Avoid excessively long variable names like termsAndConditions
src/main/java/com/example/contractmanagement/model/Contract.java:46:	LongVariable:	LongVariable: Avoid excessively long variable names like termsAndConditions
src/main/java/com/example/contractmanagement/model/Contract.java:52:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contract.java:52:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contract.java:56:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contract.java:56:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contract.java:60:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contract.java:60:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contract.java:69:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/model/Contract.java:69:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/model/Contract.java:70:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'contractType' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/Contract.java:70:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'contractType' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/Contract.java:71:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'contractDuration' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/Contract.java:71:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'contractDuration' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/Contract.java:72:	LongVariable:	LongVariable: Avoid excessively long variable names like termsAndConditions
src/main/java/com/example/contractmanagement/model/Contract.java:72:	LongVariable:	LongVariable: Avoid excessively long variable names like termsAndConditions
src/main/java/com/example/contractmanagement/model/Contract.java:72:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'termsAndConditions' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/Contract.java:72:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'termsAndConditions' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/Contract.java:73:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'status' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/Contract.java:73:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'status' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/Contract.java:73:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplier' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/Contract.java:73:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplier' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/Contract.java:74:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'amenities' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/Contract.java:74:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'amenities' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/Contractor.java:25:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/Contractor.java:25:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/Contractor.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contractor.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contractor.java:30:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/model/Contractor.java:30:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/model/Contractor.java:34:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contractor.java:34:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contractor.java:38:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contractor.java:38:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Contractor.java:40:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/model/Contractor.java:40:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/model/Contractor.java:41:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/Contractor.java:41:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'name' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/Contractor.java:42:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'password' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/Contractor.java:42:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'password' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/Feedback.java:21:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/Feedback.java:21:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/Feedback.java:25:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Feedback.java:25:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Feedback.java:25:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/model/Feedback.java:25:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/model/Feedback.java:29:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Feedback.java:29:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Feedback.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Feedback.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/MessageResponse.java:16:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/MessageResponse.java:16:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/MessageResponse.java:18:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the timeStamp field if you want a default access modifier
src/main/java/com/example/contractmanagement/model/MessageResponse.java:18:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the timeStamp field if you want a default access modifier
src/main/java/com/example/contractmanagement/model/MessageResponse.java:18:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/MessageResponse.java:18:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/MessageResponse.java:18:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/model/MessageResponse.java:18:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/model/MessageResponse.java:19:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the message field if you want a default access modifier
src/main/java/com/example/contractmanagement/model/MessageResponse.java:19:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the message field if you want a default access modifier
src/main/java/com/example/contractmanagement/model/MessageResponse.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/MessageResponse.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/MessageResponse.java:19:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/model/MessageResponse.java:19:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/model/MessageResponse.java:20:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the status field if you want a default access modifier
src/main/java/com/example/contractmanagement/model/MessageResponse.java:20:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the status field if you want a default access modifier
src/main/java/com/example/contractmanagement/model/MessageResponse.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/MessageResponse.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/MessageResponse.java:20:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/model/MessageResponse.java:20:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/model/MessageResponse.java:22:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/model/MessageResponse.java:22:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/model/MessageResponse.java:22:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/MessageResponse.java:22:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/MessageResponse.java:22:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'string' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/MessageResponse.java:22:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'string' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/model/Proposal.java:28:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/Proposal.java:28:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/Proposal.java:32:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Proposal.java:32:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Proposal.java:32:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/model/Proposal.java:32:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/model/Proposal.java:36:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Proposal.java:36:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Proposal.java:38:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/model/Proposal.java:38:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/model/Proposal.java:39:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the quotation field if you want a default access modifier
src/main/java/com/example/contractmanagement/model/Proposal.java:39:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the quotation field if you want a default access modifier
src/main/java/com/example/contractmanagement/model/Proposal.java:39:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Proposal.java:39:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Proposal.java:43:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Proposal.java:43:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Proposal.java:47:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Proposal.java:47:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Proposal.java:50:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Proposal.java:50:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Requirement.java:28:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/Requirement.java:28:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/Requirement.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Requirement.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Requirement.java:33:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/model/Requirement.java:33:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/model/Requirement.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Requirement.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Requirement.java:41:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Requirement.java:41:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Requirement.java:45:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Requirement.java:45:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/SecretQuestions.java:23:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/SecretQuestions.java:23:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/SecretQuestions.java:27:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/SecretQuestions.java:27:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/SecretQuestions.java:27:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/model/SecretQuestions.java:27:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/model/SecretQuestions.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/SecretQuestions.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Supplier.java:30:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/Supplier.java:30:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/Supplier.java:34:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Supplier.java:34:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Supplier.java:34:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/model/Supplier.java:34:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/model/Supplier.java:38:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Supplier.java:38:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Supplier.java:43:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Supplier.java:43:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Supplier.java:47:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Supplier.java:47:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Supplier.java:51:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Supplier.java:51:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Supplier.java:56:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Supplier.java:56:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Supplier.java:60:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Supplier.java:60:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Supplier.java:60:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/model/Supplier.java:60:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/model/SupplierDetails.java:18:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/SupplierDetails.java:18:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/SupplierDetails.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/SupplierDetails.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/SupplierDetails.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/SupplierDetails.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/SupplierDetails.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/SupplierDetails.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/SupplierDetails.java:22:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/SupplierDetails.java:22:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/SupplierDetails.java:23:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/SupplierDetails.java:23:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Types.java:29:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/Types.java:29:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/model/Types.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Types.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Types.java:33:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/model/Types.java:33:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/model/Types.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Types.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Types.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/model/Types.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:15:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:15:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:17:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:17:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:18:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:18:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:21:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:21:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:24:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "status" appears 5 times in this file; the first occurrence is on line 24
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:24:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "status" appears 5 times in this file; the first occurrence is on line 24
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:24:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:24:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:24:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:24:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:27:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:27:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:27:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:27:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:29:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:29:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:31:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:31:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:31:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:31:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:35:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:35:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:35:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:35:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:39:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:39:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:42:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ContractRepository.java:42:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ContractorRepository.java:11:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/repository/ContractorRepository.java:11:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/repository/ProposalRepository.java:12:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/repository/ProposalRepository.java:12:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/repository/ProposalRepository.java:13:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ProposalRepository.java:13:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ProposalRepository.java:14:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/ProposalRepository.java:14:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/RequirementRepository.java:11:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/repository/RequirementRepository.java:11:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/repository/RequirementRepository.java:12:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/RequirementRepository.java:12:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/SupplierRepository.java:15:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/repository/SupplierRepository.java:15:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/repository/SupplierRepository.java:17:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/SupplierRepository.java:17:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/SupplierRepository.java:17:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/repository/SupplierRepository.java:17:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/repository/SupplierRepository.java:17:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'findByTypeId': the method is declared in an interface type
src/main/java/com/example/contractmanagement/repository/SupplierRepository.java:17:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'findByTypeId': the method is declared in an interface type
src/main/java/com/example/contractmanagement/repository/SupplierRepository.java:20:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/SupplierRepository.java:20:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/SupplierRepository.java:20:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'findAllContractsFromSupplierId': the method is declared in an interface type
src/main/java/com/example/contractmanagement/repository/SupplierRepository.java:20:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'findAllContractsFromSupplierId': the method is declared in an interface type
src/main/java/com/example/contractmanagement/repository/TypesRepository.java:14:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/repository/TypesRepository.java:14:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/repository/TypesRepository.java:16:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/TypesRepository.java:16:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/repository/TypesRepository.java:16:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'findSuppliersByTypeId': the method is declared in an interface type
src/main/java/com/example/contractmanagement/repository/TypesRepository.java:16:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'findSuppliersByTypeId': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractService.java:8:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:8:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:10:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:10:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:10:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'createOrModifyContract': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractService.java:10:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'createOrModifyContract': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractService.java:12:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/service/ContractService.java:12:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/service/ContractService.java:13:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/service/ContractService.java:13:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/service/ContractService.java:15:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:15:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:15:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getCreatedContractsbyStatus': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractService.java:15:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getCreatedContractsbyStatus': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractService.java:18:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:18:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:18:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getContractsBySupplierId': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractService.java:18:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getContractsBySupplierId': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractService.java:21:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:21:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:21:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getContract': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractService.java:21:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getContract': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractService.java:25:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:25:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:25:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getContractsOfAllSuppliers': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractService.java:25:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getContractsOfAllSuppliers': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractService.java:28:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:28:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:28:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getActiveContractIds': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractService.java:28:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getActiveContractIds': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractService.java:31:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:31:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:31:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getActiveContractsOfAllSuppliers': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractService.java:31:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getActiveContractsOfAllSuppliers': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractService.java:35:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/service/ContractService.java:35:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/service/ContractService.java:37:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:37:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:37:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getSuppliersofActiveContracts': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractService.java:37:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getSuppliersofActiveContracts': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractService.java:39:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:39:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractService.java:39:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getAllActiveContracts': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractService.java:39:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getAllActiveContracts': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:29:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:29:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:29:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:29:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:29:	ModifiedCyclomaticComplexity:	ModifiedCyclomaticComplexity: The class 'ContractServiceImpl' has a Modified Cyclomatic Complexity of 5 (Highest = 12).
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:29:	ModifiedCyclomaticComplexity:	ModifiedCyclomaticComplexity: The class 'ContractServiceImpl' has a Modified Cyclomatic Complexity of 5 (Highest = 12).
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:29:	StdCyclomaticComplexity:	StdCyclomaticComplexity: The class 'ContractServiceImpl' has a Standard Cyclomatic Complexity of 5 (Highest = 12).
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:29:	StdCyclomaticComplexity:	StdCyclomaticComplexity: The class 'ContractServiceImpl' has a Standard Cyclomatic Complexity of 5 (Highest = 12).
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:32:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:32:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:32:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:32:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:34:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:34:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:34:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:34:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:40:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:40:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:43:	CyclomaticComplexity:	CyclomaticComplexity: The method 'createOrModifyContract(ContractDetails, String)' has a cyclomatic complexity of 16.
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:43:	CyclomaticComplexity:	CyclomaticComplexity: The method 'createOrModifyContract(ContractDetails, String)' has a cyclomatic complexity of 16.
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:43:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'contractDetails' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:43:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'contractDetails' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:43:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:43:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:43:	ModifiedCyclomaticComplexity:	ModifiedCyclomaticComplexity: The method 'createOrModifyContract' has a Modified Cyclomatic Complexity of 12.
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:43:	ModifiedCyclomaticComplexity:	ModifiedCyclomaticComplexity: The method 'createOrModifyContract' has a Modified Cyclomatic Complexity of 12.
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:43:	NPathComplexity:	NPathComplexity: The method 'createOrModifyContract(ContractDetails, String)' has an NPath complexity of 1152, current threshold is 200
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:43:	NPathComplexity:	NPathComplexity: The method 'createOrModifyContract(ContractDetails, String)' has an NPath complexity of 1152, current threshold is 200
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:43:	StdCyclomaticComplexity:	StdCyclomaticComplexity: The method 'createOrModifyContract' has a Standard Cyclomatic Complexity of 12.
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:43:	StdCyclomaticComplexity:	StdCyclomaticComplexity: The method 'createOrModifyContract' has a Standard Cyclomatic Complexity of 12.
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:44:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "START" appears 9 times in this file; the first occurrence is on line 44
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:44:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "START" appears 9 times in this file; the first occurrence is on line 44
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:45:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:45:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:46:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Unauthorized access. Throwing Unauthorized Exception" appears 9 times in this file; the first occurrence is on line 46
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:46:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Unauthorized access. Throwing Unauthorized Exception" appears 9 times in this file; the first occurrence is on line 46
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:51:	ConfusingTernary:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:51:	ConfusingTernary:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:52:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:52:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:59:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'contract' (lines '59'-'97').
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:59:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'contract' (lines '59'-'97').
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:73:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:73:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:73:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:73:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:89:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:89:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:89:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'returnId' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:89:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'returnId' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:90:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "END" appears 8 times in this file; the first occurrence is on line 90
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:90:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "END" appears 8 times in this file; the first occurrence is on line 90
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:92:	AvoidCatchingGenericException:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:92:	AvoidCatchingGenericException:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:92:	AvoidCatchingNPE:	AvoidCatchingNPE: Avoid catching NullPointerException; consider removing the cause of the NPE.
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:92:	AvoidCatchingNPE:	AvoidCatchingNPE: Avoid catching NullPointerException; consider removing the cause of the NPE.
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:94:	PreserveStackTrace:	PreserveStackTrace: New exception is thrown in catch block, original stack trace may be lost
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:94:	PreserveStackTrace:	PreserveStackTrace: New exception is thrown in catch block, original stack trace may be lost
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:99:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:99:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:101:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'status' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:101:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'status' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:101:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:101:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:101:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:101:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:103:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:103:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:103:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:103:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:107:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:107:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:108:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:108:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:118:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:118:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:118:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:118:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:120:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:120:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:124:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:124:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:125:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:125:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:129:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractDetails' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:129:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractDetails' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:130:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:130:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:131:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:131:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:131:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:131:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:141:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'contractId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:141:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'contractId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:141:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:141:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:143:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:143:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:143:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:143:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:147:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:147:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:147:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:147:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:153:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:153:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:153:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:153:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:153:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:153:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:153:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:153:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:153:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:153:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:153:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:153:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:153:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:153:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:158:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:158:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:160:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:160:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:164:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:164:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:165:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:165:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:166:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "No such contracts found. Throwing NoCreatedContractsException" appears 4 times in this file; the first occurrence is on line 166
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:166:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "No such contracts found. Throwing NoCreatedContractsException" appears 4 times in this file; the first occurrence is on line 166
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:169:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractDetails' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:169:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractDetails' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:170:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:170:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:171:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:171:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:171:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:171:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:171:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:171:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:179:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:179:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:179:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:179:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:181:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:181:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:181:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:181:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:185:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Active" appears 4 times in this file; the first occurrence is on line 185
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:185:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Active" appears 4 times in this file; the first occurrence is on line 185
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:185:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ids' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:185:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ids' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:186:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:186:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:195:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:195:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:197:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:197:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:201:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ids' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:201:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ids' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:202:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:202:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:211:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierFlag' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:211:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierFlag' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:211:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:211:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:213:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:213:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:217:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'statuses' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:217:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'statuses' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:217:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:217:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:219:	SimplifyBooleanExpressions:	SimplifyBooleanExpressions: Avoid unnecessary comparisons in boolean expressions
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:219:	SimplifyBooleanExpressions:	SimplifyBooleanExpressions: Avoid unnecessary comparisons in boolean expressions
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:226:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'suppliers' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:226:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'suppliers' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:227:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:227:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:231:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplierUtils' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:231:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplierUtils' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:232:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 's' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:232:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 's' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:233:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:233:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:233:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:233:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:233:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'detail' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:233:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'detail' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:241:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:241:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:243:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:243:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:247:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:247:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:248:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:248:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:252:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractDetails' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:252:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractDetails' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:253:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:253:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:254:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:254:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:254:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:254:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:254:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:254:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:265:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/service/ContractServiceImpl.java:265:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/service/ContractorSerivce.java:12:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/ContractorSerivce.java:12:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/ContractorSerivce.java:13:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractorSerivce.java:13:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractorSerivce.java:13:	LongVariable:	LongVariable: Avoid excessively long variable names like adminlogincredentials
src/main/java/com/example/contractmanagement/service/ContractorSerivce.java:13:	LongVariable:	LongVariable: Avoid excessively long variable names like adminlogincredentials
src/main/java/com/example/contractmanagement/service/ContractorSerivce.java:13:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'login': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractorSerivce.java:13:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'login': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractorSerivce.java:14:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractorSerivce.java:14:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ContractorSerivce.java:14:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getValidity': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractorSerivce.java:14:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getValidity': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:28:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:28:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:28:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:28:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:31:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:31:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:31:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:31:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:33:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:33:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:35:	AvoidUncheckedExceptionsInSignatures:	AvoidUncheckedExceptionsInSignatures: A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:35:	AvoidUncheckedExceptionsInSignatures:	AvoidUncheckedExceptionsInSignatures: A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:35:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'adminid' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:35:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'adminid' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:37:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:37:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:38:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:38:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:42:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:42:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:42:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ad' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:42:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ad' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:42:	ShortVariable:	ShortVariable: Avoid variables with short names like ad
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:42:	ShortVariable:	ShortVariable: Avoid variables with short names like ad
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:43:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:43:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:43:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:43:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:46:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:46:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:46:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:46:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:50:	LongVariable:	LongVariable: Avoid excessively long variable names like adminlogincredentials
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:50:	LongVariable:	LongVariable: Avoid excessively long variable names like adminlogincredentials
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:50:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'adminlogincredentials' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:50:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'adminlogincredentials' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:51:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:51:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:52:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:52:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:52:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ad' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:52:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ad' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:52:	ShortVariable:	ShortVariable: Avoid variables with short names like ad
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:52:	ShortVariable:	ShortVariable: Avoid variables with short names like ad
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:53:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:53:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:53:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:53:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:55:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:55:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:55:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:55:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:55:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'userdetails' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:55:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'userdetails' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:56:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:56:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:57:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'adminid' (lines '57'-'60').
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:57:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'adminid' (lines '57'-'60').
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:57:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'adminid' (lines '57'-'72').
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:57:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'adminid' (lines '57'-'72').
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:57:	UnusedAssignment:	UnusedAssignment: The initializer for variable 'adminid' is never used (overwritten on line 60)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:57:	UnusedAssignment:	UnusedAssignment: The initializer for variable 'adminid' is never used (overwritten on line 60)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:58:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'generateToken' (lines '58'-'63').
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:58:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'generateToken' (lines '58'-'63').
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:58:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'generateToken' (lines '58'-'72').
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:58:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'generateToken' (lines '58'-'72').
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:58:	UnusedAssignment:	UnusedAssignment: The initializer for variable 'generateToken' is never used (overwritten on line 63)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:58:	UnusedAssignment:	UnusedAssignment: The initializer for variable 'generateToken' is never used (overwritten on line 63)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:59:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:59:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:61:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin2' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:61:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin2' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:64:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'map' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:64:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'map' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:64:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:64:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:64:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:64:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:74:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:74:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:75:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'res' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:75:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'res' could be declared final
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:79:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:79:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:79:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ContractorSerivceImpl.java:79:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalService.java:7:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/ProposalService.java:7:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/ProposalService.java:8:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ProposalService.java:8:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ProposalService.java:8:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'createProposal': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ProposalService.java:8:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'createProposal': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ProposalService.java:9:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ProposalService.java:9:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ProposalService.java:9:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'viewAllProposals': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ProposalService.java:9:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'viewAllProposals': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ProposalService.java:10:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ProposalService.java:10:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ProposalService.java:10:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/service/ProposalService.java:10:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/service/ProposalService.java:10:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'viewProposalById': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ProposalService.java:10:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'viewProposalById': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ProposalService.java:11:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ProposalService.java:11:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ProposalService.java:11:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/service/ProposalService.java:11:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/service/ProposalService.java:11:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'editProposalStatus': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ProposalService.java:11:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'editProposalStatus': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ProposalService.java:12:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ProposalService.java:12:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ProposalService.java:12:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'viewProposalsBySupplier': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ProposalService.java:12:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'viewProposalsBySupplier': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ProposalService.java:13:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ProposalService.java:13:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ProposalService.java:13:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/service/ProposalService.java:13:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/service/ProposalService.java:13:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'editProposalBySupplier': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ProposalService.java:13:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'editProposalBySupplier': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ProposalService.java:14:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ProposalService.java:14:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/ProposalService.java:14:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'viewToBeRevisitedProposals': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ProposalService.java:14:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'viewToBeRevisitedProposals': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:22:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:22:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:22:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:22:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:24:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:24:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:25:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:25:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:25:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the proposalRepo field if you want a default access modifier
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:25:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the proposalRepo field if you want a default access modifier
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:25:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:25:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:27:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:27:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:28:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:28:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:28:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplierRepo field if you want a default access modifier
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:28:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplierRepo field if you want a default access modifier
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:28:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:28:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:30:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:30:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:31:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:31:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:31:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the requirementRepo field if you want a default access modifier
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:31:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the requirementRepo field if you want a default access modifier
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:31:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:31:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:34:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:34:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:34:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:34:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:40:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'proposal' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:40:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'proposal' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:40:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'requirementId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:40:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'requirementId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:40:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:40:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:40:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:40:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:41:	ConfusingTernary:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:41:	ConfusingTernary:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:41:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:41:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:44:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:44:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:44:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:44:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:45:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:45:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:45:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:45:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:46:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal0' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:46:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal0' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:50:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'bd' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:50:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'bd' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:50:	ShortVariable:	ShortVariable: Avoid variables with short names like bd
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:50:	ShortVariable:	ShortVariable: Avoid variables with short names like bd
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:59:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:59:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:60:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:60:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:63:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:63:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:64:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:64:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:65:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:65:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:65:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:65:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:67:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'idList' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:67:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'idList' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:67:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:67:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:68:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:68:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:69:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:69:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:69:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalDetails' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:69:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalDetails' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:71:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:71:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:72:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:72:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:80:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'id' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:80:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'id' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:80:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:80:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:80:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:80:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:81:	ConfusingTernary:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:81:	ConfusingTernary:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:81:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:81:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:81:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:81:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:81:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:81:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:85:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:85:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:85:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:85:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:86:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:86:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:86:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:86:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:88:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalDetails' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:88:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalDetails' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:89:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:89:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:90:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:90:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:90:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:90:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:91:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:91:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:91:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:91:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:92:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:92:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:92:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:92:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:93:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:93:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:94:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:94:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:103:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:103:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:104:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:104:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:107:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:107:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:108:	IfStmtsMustUseBraces:	IfStmtsMustUseBraces: Avoid using if statements without curly braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:108:	IfStmtsMustUseBraces:	IfStmtsMustUseBraces: Avoid using if statements without curly braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:108:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:108:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:109:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:109:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:110:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'idList' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:110:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'idList' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:110:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:110:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:111:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:111:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:112:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:112:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:112:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalDetails' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:112:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalDetails' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:114:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:114:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:115:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:115:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:122:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'id' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:122:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'id' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:122:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'status' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:122:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'status' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:122:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:122:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:122:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:122:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:123:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:123:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:126:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:126:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:126:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:126:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:127:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:127:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:127:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:127:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:135:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:135:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:135:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:135:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:136:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:136:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:139:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:139:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:139:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:139:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:140:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:140:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:141:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:141:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:142:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:142:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:142:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:142:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:144:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'idList' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:144:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'idList' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:144:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:144:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:145:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:145:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:146:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:146:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:146:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalDetails' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:146:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalDetails' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:148:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:148:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:150:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:150:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:159:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'id' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:159:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'id' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:159:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'proposalDate' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:159:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'proposalDate' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:159:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'quotation' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:159:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'quotation' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:159:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:159:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:159:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:159:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:160:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:160:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:163:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:163:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:163:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal1' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:163:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal1' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:164:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:164:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:164:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:164:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:167:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'quotationBD' could be declared final
src/main/java/com/example/contractmanagement/service/ProposalServiceImpl.java:167:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'quotationBD' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementService.java:7:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/RequirementService.java:7:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/RequirementService.java:8:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/RequirementService.java:8:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/RequirementService.java:8:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'createRequirement': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/RequirementService.java:8:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'createRequirement': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/RequirementService.java:9:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/RequirementService.java:9:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/RequirementService.java:9:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'viewAllRequirementsAdmin': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/RequirementService.java:9:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'viewAllRequirementsAdmin': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/RequirementService.java:10:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/RequirementService.java:10:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/RequirementService.java:10:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'viewAllRequirementByTypeSupplier': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/RequirementService.java:10:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'viewAllRequirementByTypeSupplier': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/RequirementService.java:11:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/RequirementService.java:11:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/RequirementService.java:11:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'viewRequirementById': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/RequirementService.java:11:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'viewRequirementById': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/RequirementService.java:12:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/RequirementService.java:12:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/RequirementService.java:12:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'editRequirement': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/RequirementService.java:12:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'editRequirement': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/RequirementService.java:13:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/RequirementService.java:13:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/RequirementService.java:13:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'deleteRequirementById': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/RequirementService.java:13:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'deleteRequirementById': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:18:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:18:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:18:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:18:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:20:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:20:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:21:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:21:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:21:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the requirementRepo field if you want a default access modifier
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:21:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the requirementRepo field if you want a default access modifier
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:23:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:23:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:24:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:24:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:24:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the typeRepo field if you want a default access modifier
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:24:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the typeRepo field if you want a default access modifier
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:24:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:24:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:27:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:27:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:27:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:27:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:30:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:30:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:33:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'requirementD' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:33:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'requirementD' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:33:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:33:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:33:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'typeId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:33:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'typeId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:34:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:34:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:37:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:37:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:37:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:37:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:38:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:38:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:39:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'date' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:39:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'date' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:49:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:49:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:52:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'list' (lines '52'-'53').
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:52:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'list' (lines '52'-'53').
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:52:	UnusedAssignment:	UnusedAssignment: The initializer for variable 'list' is never used (overwritten on line 53)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:52:	UnusedAssignment:	UnusedAssignment: The initializer for variable 'list' is never used (overwritten on line 53)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:52:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:52:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:54:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:54:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:55:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:55:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:55:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:55:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:57:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'idList' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:57:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'idList' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:57:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:57:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:59:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:59:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:60:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:60:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:60:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'req' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:60:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'req' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:64:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:64:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:73:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:73:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:73:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'typeId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:73:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'typeId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:74:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:74:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:78:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:78:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:78:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:78:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:79:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'list' (lines '79'-'80').
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:79:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'list' (lines '79'-'80').
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:79:	UnusedAssignment:	UnusedAssignment: The initializer for variable 'list' is never used (overwritten on line 80)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:79:	UnusedAssignment:	UnusedAssignment: The initializer for variable 'list' is never used (overwritten on line 80)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:79:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:79:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:81:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:81:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:82:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:82:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:82:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:82:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:84:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'idList' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:84:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'idList' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:84:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:84:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:86:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:86:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:94:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'requirementId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:94:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'requirementId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:94:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:94:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:95:	ConfusingTernary:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:95:	ConfusingTernary:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:95:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:95:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:100:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:100:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:100:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:100:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:101:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'req' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:101:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'req' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:102:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:102:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:103:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:103:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:110:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'deliveryDate' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:110:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'deliveryDate' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:110:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'description' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:110:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'description' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:110:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'requirementId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:110:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'requirementId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:110:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:110:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:110:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'typeId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:110:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'typeId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:111:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:111:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:114:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:114:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:114:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'updatedReq' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:114:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'updatedReq' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:115:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:115:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:116:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:116:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:117:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:117:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:117:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:117:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:118:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:118:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:124:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'requirementId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:124:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'requirementId' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:124:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:124:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:125:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/RequirementServiceImpl.java:125:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/SupplierService.java:13:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/SupplierService.java:13:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/SupplierService.java:14:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/SupplierService.java:14:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/SupplierService.java:14:	LongVariable:	LongVariable: Avoid excessively long variable names like supplierlogincredentials
src/main/java/com/example/contractmanagement/service/SupplierService.java:14:	LongVariable:	LongVariable: Avoid excessively long variable names like supplierlogincredentials
src/main/java/com/example/contractmanagement/service/SupplierService.java:14:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'login': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/SupplierService.java:14:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'login': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/SupplierService.java:15:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/SupplierService.java:15:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/SupplierService.java:15:	LongVariable:	LongVariable: Avoid excessively long variable names like suppliersignupcredentials
src/main/java/com/example/contractmanagement/service/SupplierService.java:15:	LongVariable:	LongVariable: Avoid excessively long variable names like suppliersignupcredentials
src/main/java/com/example/contractmanagement/service/SupplierService.java:15:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'signup': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/SupplierService.java:15:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'signup': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/SupplierService.java:16:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/SupplierService.java:16:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/service/SupplierService.java:16:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getValidity': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/SupplierService.java:16:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on method 'getValidity': the method is declared in an interface type
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:30:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:30:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:30:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:30:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:33:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:33:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:35:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:35:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:35:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:35:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:39:	AvoidUncheckedExceptionsInSignatures:	AvoidUncheckedExceptionsInSignatures: A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:39:	AvoidUncheckedExceptionsInSignatures:	AvoidUncheckedExceptionsInSignatures: A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:39:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierid' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:39:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierid' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:40:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:40:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:41:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:41:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:45:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:45:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:45:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supp' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:45:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supp' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:46:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:46:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:46:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:46:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:47:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Supplier" appears 4 times in this file; the first occurrence is on line 47
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:47:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Supplier" appears 4 times in this file; the first occurrence is on line 47
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:49:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:49:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:49:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:49:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:53:	LongVariable:	LongVariable: Avoid excessively long variable names like supplierlogincredentials
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:53:	LongVariable:	LongVariable: Avoid excessively long variable names like supplierlogincredentials
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierlogincredentials' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'supplierlogincredentials' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:54:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:54:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:55:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:55:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:55:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supp' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:55:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supp' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:56:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:56:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:56:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:56:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:58:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:58:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:58:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:58:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:58:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'userdetails' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:58:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'userdetails' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:60:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:60:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:61:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'supplierid' (lines '61'-'64').
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:61:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'supplierid' (lines '61'-'64').
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:61:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'supplierid' (lines '61'-'77').
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:61:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'supplierid' (lines '61'-'77').
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:61:	UnusedAssignment:	UnusedAssignment: The initializer for variable 'supplierid' is never used (overwritten on line 64)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:61:	UnusedAssignment:	UnusedAssignment: The initializer for variable 'supplierid' is never used (overwritten on line 64)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:62:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'generateToken' (lines '62'-'66').
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:62:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'generateToken' (lines '62'-'66').
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:62:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'generateToken' (lines '62'-'77').
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:62:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'generateToken' (lines '62'-'77').
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:62:	UnusedAssignment:	UnusedAssignment: The initializer for variable 'generateToken' is never used (overwritten on line 66)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:62:	UnusedAssignment:	UnusedAssignment: The initializer for variable 'generateToken' is never used (overwritten on line 66)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:63:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:63:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:67:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier2' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:67:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier2' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:69:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'map' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:69:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'map' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:69:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:69:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:80:	LongVariable:	LongVariable: Avoid excessively long variable names like suppliersignupcredentials
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:80:	LongVariable:	LongVariable: Avoid excessively long variable names like suppliersignupcredentials
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:80:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'suppliersignupcredentials' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:80:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'suppliersignupcredentials' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:81:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'suppliername' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:81:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'suppliername' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:82:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplierpassword' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:82:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplierpassword' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:83:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contactnumber' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:83:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contactnumber' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:84:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'address' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:84:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'address' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:85:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'typeId' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:85:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'typeId' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:86:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:86:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:86:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:86:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:88:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:88:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:102:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:102:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:103:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'res' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:103:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'res' could be declared final
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:108:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:108:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:108:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/service/SupplierServiceImpl.java:108:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/ContractDetails.java:14:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/util/ContractDetails.java:14:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/util/ContractDetails.java:15:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the id field if you want a default access modifier
src/main/java/com/example/contractmanagement/util/ContractDetails.java:15:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the id field if you want a default access modifier
src/main/java/com/example/contractmanagement/util/ContractDetails.java:15:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ContractDetails.java:15:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ContractDetails.java:15:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/util/ContractDetails.java:15:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/util/ContractDetails.java:15:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/util/ContractDetails.java:15:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/util/ContractDetails.java:16:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contractType field if you want a default access modifier
src/main/java/com/example/contractmanagement/util/ContractDetails.java:16:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contractType field if you want a default access modifier
src/main/java/com/example/contractmanagement/util/ContractDetails.java:16:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ContractDetails.java:16:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ContractDetails.java:16:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/util/ContractDetails.java:16:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/util/ContractDetails.java:17:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the duration field if you want a default access modifier
src/main/java/com/example/contractmanagement/util/ContractDetails.java:17:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the duration field if you want a default access modifier
src/main/java/com/example/contractmanagement/util/ContractDetails.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ContractDetails.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ContractDetails.java:17:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/util/ContractDetails.java:17:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/util/ContractDetails.java:18:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the tnc field if you want a default access modifier
src/main/java/com/example/contractmanagement/util/ContractDetails.java:18:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the tnc field if you want a default access modifier
src/main/java/com/example/contractmanagement/util/ContractDetails.java:18:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ContractDetails.java:18:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ContractDetails.java:18:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/util/ContractDetails.java:18:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/util/ContractDetails.java:19:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplierId field if you want a default access modifier
src/main/java/com/example/contractmanagement/util/ContractDetails.java:19:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplierId field if you want a default access modifier
src/main/java/com/example/contractmanagement/util/ContractDetails.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ContractDetails.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ContractDetails.java:19:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/util/ContractDetails.java:19:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/util/ContractDetails.java:20:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the status field if you want a default access modifier
src/main/java/com/example/contractmanagement/util/ContractDetails.java:20:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the status field if you want a default access modifier
src/main/java/com/example/contractmanagement/util/ContractDetails.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ContractDetails.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ContractDetails.java:20:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/util/ContractDetails.java:20:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/util/ContractDetails.java:21:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the amenities field if you want a default access modifier
src/main/java/com/example/contractmanagement/util/ContractDetails.java:21:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the amenities field if you want a default access modifier
src/main/java/com/example/contractmanagement/util/ContractDetails.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ContractDetails.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ContractDetails.java:21:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/util/ContractDetails.java:21:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/example/contractmanagement/util/DateUtil.java:7:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/util/DateUtil.java:7:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/util/DateUtil.java:7:	UseUtilityClass:	UseUtilityClass: All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
src/main/java/com/example/contractmanagement/util/DateUtil.java:7:	UseUtilityClass:	UseUtilityClass: All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
src/main/java/com/example/contractmanagement/util/DateUtil.java:9:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/util/DateUtil.java:9:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/util/DateUtil.java:9:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'date' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/util/DateUtil.java:9:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'date' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/util/DateUtil.java:11:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'formatter' could be declared final
src/main/java/com/example/contractmanagement/util/DateUtil.java:11:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'formatter' could be declared final
src/main/java/com/example/contractmanagement/util/DateUtil.java:11:	SimpleDateFormatNeedsLocale:	SimpleDateFormatNeedsLocale: When instantiating a SimpleDateFormat object, specify a Locale
src/main/java/com/example/contractmanagement/util/DateUtil.java:11:	SimpleDateFormatNeedsLocale:	SimpleDateFormatNeedsLocale: When instantiating a SimpleDateFormat object, specify a Locale
src/main/java/com/example/contractmanagement/util/DateUtil.java:12:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'convertedDate' (lines '12'-'14').
src/main/java/com/example/contractmanagement/util/DateUtil.java:12:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'convertedDate' (lines '12'-'14').
src/main/java/com/example/contractmanagement/util/DateUtil.java:17:	AvoidPrintStackTrace:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main/java/com/example/contractmanagement/util/DateUtil.java:17:	AvoidPrintStackTrace:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main/java/com/example/contractmanagement/util/DateUtil.java:22:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/util/DateUtil.java:22:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/util/DateUtil.java:22:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'date' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/util/DateUtil.java:22:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'date' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/util/DateUtil.java:23:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'dateFormat' could be declared final
src/main/java/com/example/contractmanagement/util/DateUtil.java:23:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'dateFormat' could be declared final
src/main/java/com/example/contractmanagement/util/DateUtil.java:23:	SimpleDateFormatNeedsLocale:	SimpleDateFormatNeedsLocale: When instantiating a SimpleDateFormat object, specify a Locale
src/main/java/com/example/contractmanagement/util/DateUtil.java:23:	SimpleDateFormatNeedsLocale:	SimpleDateFormatNeedsLocale: When instantiating a SimpleDateFormat object, specify a Locale
src/main/java/com/example/contractmanagement/util/DateUtil.java:24:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'strDate' could be declared final
src/main/java/com/example/contractmanagement/util/DateUtil.java:24:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'strDate' could be declared final
src/main/java/com/example/contractmanagement/util/DateUtil.java:25:	UnnecessaryLocalBeforeReturn:	UnnecessaryLocalBeforeReturn: Consider simply returning the value vs storing it in local variable 'strDate'
src/main/java/com/example/contractmanagement/util/DateUtil.java:25:	UnnecessaryLocalBeforeReturn:	UnnecessaryLocalBeforeReturn: Consider simply returning the value vs storing it in local variable 'strDate'
src/main/java/com/example/contractmanagement/util/JwtUtil.java:12:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/util/JwtUtil.java:12:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/util/JwtUtil.java:12:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/util/JwtUtil.java:12:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/util/JwtUtil.java:13:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/util/JwtUtil.java:13:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/example/contractmanagement/util/JwtUtil.java:13:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/JwtUtil.java:13:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/JwtUtil.java:13:	ImmutableField:	ImmutableField: Private field 'secretkey' could be made final; it is only initialized in the declaration or constructor.
src/main/java/com/example/contractmanagement/util/JwtUtil.java:13:	ImmutableField:	ImmutableField: Private field 'secretkey' could be made final; it is only initialized in the declaration or constructor.
src/main/java/com/example/contractmanagement/util/JwtUtil.java:22:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/util/JwtUtil.java:22:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/util/JwtUtil.java:25:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:25:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:25:	LiteralsFirstInComparisons:	LiteralsFirstInComparisons: Position literals first in String comparisons
src/main/java/com/example/contractmanagement/util/JwtUtil.java:25:	LiteralsFirstInComparisons:	LiteralsFirstInComparisons: Position literals first in String comparisons
src/main/java/com/example/contractmanagement/util/JwtUtil.java:26:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/example/contractmanagement/util/JwtUtil.java:26:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/example/contractmanagement/util/JwtUtil.java:29:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'token1' could be declared final
src/main/java/com/example/contractmanagement/util/JwtUtil.java:29:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'token1' could be declared final
src/main/java/com/example/contractmanagement/util/JwtUtil.java:30:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:30:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:30:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:30:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:30:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:30:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:30:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:30:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:30:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/example/contractmanagement/util/JwtUtil.java:30:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/example/contractmanagement/util/JwtUtil.java:31:	AvoidCatchingGenericException:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/main/java/com/example/contractmanagement/util/JwtUtil.java:31:	AvoidCatchingGenericException:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/main/java/com/example/contractmanagement/util/JwtUtil.java:36:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/util/JwtUtil.java:36:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/util/JwtUtil.java:36:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/util/JwtUtil.java:36:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/util/JwtUtil.java:38:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:38:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:38:	LiteralsFirstInComparisons:	LiteralsFirstInComparisons: Position literals first in String comparisons
src/main/java/com/example/contractmanagement/util/JwtUtil.java:38:	LiteralsFirstInComparisons:	LiteralsFirstInComparisons: Position literals first in String comparisons
src/main/java/com/example/contractmanagement/util/JwtUtil.java:39:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/example/contractmanagement/util/JwtUtil.java:39:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/example/contractmanagement/util/JwtUtil.java:41:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'token1' could be declared final
src/main/java/com/example/contractmanagement/util/JwtUtil.java:41:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'token1' could be declared final
src/main/java/com/example/contractmanagement/util/JwtUtil.java:42:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:42:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:42:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:42:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:42:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:42:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:42:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:42:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:42:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/example/contractmanagement/util/JwtUtil.java:42:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/example/contractmanagement/util/JwtUtil.java:43:	AvoidCatchingGenericException:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/main/java/com/example/contractmanagement/util/JwtUtil.java:43:	AvoidCatchingGenericException:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/main/java/com/example/contractmanagement/util/JwtUtil.java:48:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/util/JwtUtil.java:48:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/util/JwtUtil.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'role' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/util/JwtUtil.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'role' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/util/JwtUtil.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'userDetails' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/util/JwtUtil.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'userDetails' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/util/JwtUtil.java:49:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'compact' could be declared final
src/main/java/com/example/contractmanagement/util/JwtUtil.java:49:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'compact' could be declared final
src/main/java/com/example/contractmanagement/util/JwtUtil.java:54:	UnnecessaryLocalBeforeReturn:	UnnecessaryLocalBeforeReturn: Consider simply returning the value vs storing it in local variable 'compact'
src/main/java/com/example/contractmanagement/util/JwtUtil.java:54:	UnnecessaryLocalBeforeReturn:	UnnecessaryLocalBeforeReturn: Consider simply returning the value vs storing it in local variable 'compact'
src/main/java/com/example/contractmanagement/util/JwtUtil.java:57:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/util/JwtUtil.java:57:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/example/contractmanagement/util/JwtUtil.java:57:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/util/JwtUtil.java:57:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'token' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/util/JwtUtil.java:60:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:60:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:60:	LiteralsFirstInComparisons:	LiteralsFirstInComparisons: Position literals first in String comparisons
src/main/java/com/example/contractmanagement/util/JwtUtil.java:60:	LiteralsFirstInComparisons:	LiteralsFirstInComparisons: Position literals first in String comparisons
src/main/java/com/example/contractmanagement/util/JwtUtil.java:61:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/example/contractmanagement/util/JwtUtil.java:61:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/example/contractmanagement/util/JwtUtil.java:64:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'token1' could be declared final
src/main/java/com/example/contractmanagement/util/JwtUtil.java:64:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'token1' could be declared final
src/main/java/com/example/contractmanagement/util/JwtUtil.java:65:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:65:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:65:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:65:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:65:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:65:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:65:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:65:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/util/JwtUtil.java:66:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/example/contractmanagement/util/JwtUtil.java:66:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/example/contractmanagement/util/JwtUtil.java:68:	AvoidCatchingGenericException:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/main/java/com/example/contractmanagement/util/JwtUtil.java:68:	AvoidCatchingGenericException:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/main/java/com/example/contractmanagement/util/ProposalDetails.java:11:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/util/ProposalDetails.java:11:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/util/ProposalDetails.java:11:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/util/ProposalDetails.java:11:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/util/ProposalDetails.java:12:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ProposalDetails.java:12:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ProposalDetails.java:12:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/util/ProposalDetails.java:12:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/util/ProposalDetails.java:13:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ProposalDetails.java:13:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ProposalDetails.java:14:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ProposalDetails.java:14:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ProposalDetails.java:15:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ProposalDetails.java:15:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ProposalDetails.java:16:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ProposalDetails.java:16:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ProposalDetails.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/ProposalDetails.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/RequirementDetails.java:8:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/util/RequirementDetails.java:8:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/util/RequirementDetails.java:8:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/util/RequirementDetails.java:8:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/util/RequirementDetails.java:9:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/RequirementDetails.java:9:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/RequirementDetails.java:9:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/util/RequirementDetails.java:9:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/util/RequirementDetails.java:10:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/RequirementDetails.java:10:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/RequirementDetails.java:11:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/RequirementDetails.java:11:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/RequirementDetails.java:12:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/RequirementDetails.java:12:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/SupplierUtil.java:14:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/util/SupplierUtil.java:14:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/util/SupplierUtil.java:16:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/SupplierUtil.java:16:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/SupplierUtil.java:16:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/util/SupplierUtil.java:16:	ShortVariable:	ShortVariable: Avoid variables with short names like id
src/main/java/com/example/contractmanagement/util/SupplierUtil.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/SupplierUtil.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/SupplierUtil.java:18:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/SupplierUtil.java:18:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/SupplierUtil.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/SupplierUtil.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/SupplierUtil.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/util/SupplierUtil.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:18:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:18:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:18:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:18:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:20:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'arg0' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:20:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'arg0' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:20:	UncommentedEmptyMethodBody:	UncommentedEmptyMethodBody: Document empty method body
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:20:	UncommentedEmptyMethodBody:	UncommentedEmptyMethodBody: Document empty method body
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:24:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'context' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:24:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'context' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:24:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'password' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:24:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'password' is not assigned and could be declared final
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:25:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'validator' could be declared final
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:25:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'validator' could be declared final
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:29:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:29:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:31:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:31:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:34:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'messages' could be declared final
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:34:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'messages' could be declared final
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:35:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'messageTemplate' could be declared final
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:35:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'messageTemplate' could be declared final
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:36:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:36:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:36:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/example/contractmanagement/validator/PasswordConstraintValidator.java:36:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/ContractManagementApplicationTests.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/ContractManagementApplicationTests.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/ContractManagementApplicationTests.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/ContractManagementApplicationTests.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:28:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:28:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:28:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:28:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:29:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:29:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:30:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:30:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:30:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the authController field if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:30:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the authController field if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:31:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:31:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:32:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:32:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:32:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contractorSerivce field if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:32:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contractorSerivce field if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:32:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:32:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:33:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:33:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:34:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:34:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:34:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplierService field if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:34:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplierService field if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:34:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:34:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:35:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:35:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:36:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the jwt field if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:36:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the jwt field if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:36:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:36:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:40:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplierloginTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:40:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplierloginTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:40:	SignatureDeclareThrowsException:	SignatureDeclareThrowsException: A method/constructor should not explicitly throw java.lang.Exception
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:40:	SignatureDeclareThrowsException:	SignatureDeclareThrowsException: A method/constructor should not explicitly throw java.lang.Exception
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:42:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:42:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:45:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'map' could be declared final
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:45:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'map' could be declared final
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:45:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:45:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:47:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "token" appears 8 times in this file; the first occurrence is on line 47
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:47:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "token" appears 8 times in this file; the first occurrence is on line 47
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:48:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:48:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:48:	UnnecessaryFullyQualifiedName:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'Mockito.when' due to existing static import 'org.mockito.Mockito.when'
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:48:	UnnecessaryFullyQualifiedName:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'Mockito.when' due to existing static import 'org.mockito.Mockito.when'
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:49:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:49:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:52:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the adminloginTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:52:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the adminloginTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:52:	SignatureDeclareThrowsException:	SignatureDeclareThrowsException: A method/constructor should not explicitly throw java.lang.Exception
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:52:	SignatureDeclareThrowsException:	SignatureDeclareThrowsException: A method/constructor should not explicitly throw java.lang.Exception
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:53:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin' could be declared final
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:53:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin' could be declared final
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:56:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'map' could be declared final
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:56:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'map' could be declared final
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:56:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:56:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:59:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:59:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:59:	UnnecessaryFullyQualifiedName:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'Mockito.when' due to existing static import 'org.mockito.Mockito.when'
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:59:	UnnecessaryFullyQualifiedName:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'Mockito.when' due to existing static import 'org.mockito.Mockito.when'
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:60:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:60:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:63:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the getValidityAdminTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:63:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the getValidityAdminTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:63:	LinguisticNaming:	LinguisticNaming: Linguistics Antipattern - The getter 'getValidityAdminTest' should not return void linguistically
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:63:	LinguisticNaming:	LinguisticNaming: Linguistics Antipattern - The getter 'getValidityAdminTest' should not return void linguistically
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:63:	SignatureDeclareThrowsException:	SignatureDeclareThrowsException: A method/constructor should not explicitly throw java.lang.Exception
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:63:	SignatureDeclareThrowsException:	SignatureDeclareThrowsException: A method/constructor should not explicitly throw java.lang.Exception
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:65:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "admin" appears 6 times in this file; the first occurrence is on line 65
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:65:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "admin" appears 6 times in this file; the first occurrence is on line 65
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:65:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'auth' could be declared final
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:65:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'auth' could be declared final
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:66:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:66:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:67:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:67:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:70:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the getValiditySupplierTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:70:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the getValiditySupplierTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:70:	LinguisticNaming:	LinguisticNaming: Linguistics Antipattern - The getter 'getValiditySupplierTest' should not return void linguistically
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:70:	LinguisticNaming:	LinguisticNaming: Linguistics Antipattern - The getter 'getValiditySupplierTest' should not return void linguistically
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:70:	SignatureDeclareThrowsException:	SignatureDeclareThrowsException: A method/constructor should not explicitly throw java.lang.Exception
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:70:	SignatureDeclareThrowsException:	SignatureDeclareThrowsException: A method/constructor should not explicitly throw java.lang.Exception
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:72:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'auth' could be declared final
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:72:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'auth' could be declared final
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:73:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:73:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:73:	UnnecessaryFullyQualifiedName:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'Mockito.when' due to existing static import 'org.mockito.Mockito.when'
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:73:	UnnecessaryFullyQualifiedName:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'Mockito.when' due to existing static import 'org.mockito.Mockito.when'
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:74:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:74:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:77:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the signUpTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:77:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the signUpTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:77:	SignatureDeclareThrowsException:	SignatureDeclareThrowsException: A method/constructor should not explicitly throw java.lang.Exception
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:77:	SignatureDeclareThrowsException:	SignatureDeclareThrowsException: A method/constructor should not explicitly throw java.lang.Exception
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:78:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplierDetails' could be declared final
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:78:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplierDetails' could be declared final
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:84:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:84:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:90:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:90:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:90:	UnnecessaryFullyQualifiedName:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'Mockito.when' due to existing static import 'org.mockito.Mockito.when'
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:90:	UnnecessaryFullyQualifiedName:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'Mockito.when' due to existing static import 'org.mockito.Mockito.when'
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:91:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/AuthControllerTest.java:91:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:35:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:35:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:35:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:35:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:36:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:36:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:36:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:36:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:36:	ImmutableField:	ImmutableField: Private field 'contractType' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:36:	ImmutableField:	ImmutableField: Private field 'contractType' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:37:	ImmutableField:	ImmutableField: Private field 'duration' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:37:	ImmutableField:	ImmutableField: Private field 'duration' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:38:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:38:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:38:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the tnc field if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:38:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the tnc field if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:38:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:38:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:38:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:38:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:39:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:39:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:39:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:39:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:39:	ImmutableField:	ImmutableField: Private field 'supplierId' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:39:	ImmutableField:	ImmutableField: Private field 'supplierId' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:40:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:40:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:40:	ImmutableField:	ImmutableField: Private field 'status' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:40:	ImmutableField:	ImmutableField: Private field 'status' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:41:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:41:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:41:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:41:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:41:	ImmutableField:	ImmutableField: Private field 'amenities' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:41:	ImmutableField:	ImmutableField: Private field 'amenities' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:43:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:43:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:43:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:43:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:44:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:44:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:44:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:44:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:46:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:46:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:46:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:46:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:48:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:48:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:48:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:48:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:48:	ImmutableField:	ImmutableField: Private field 'contractDetails' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:48:	ImmutableField:	ImmutableField: Private field 'contractDetails' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:49:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:49:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:49:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:49:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:49:	ImmutableField:	ImmutableField: Private field 'anotherContractDetails' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:49:	ImmutableField:	ImmutableField: Private field 'anotherContractDetails' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:49:	LongVariable:	LongVariable: Avoid excessively long variable names like anotherContractDetails
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:49:	LongVariable:	LongVariable: Avoid excessively long variable names like anotherContractDetails
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:52:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:52:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:53:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:53:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:55:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:55:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:71:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:71:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:71:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:71:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:77:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:77:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:77:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:77:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:77:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:77:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:77:	LongVariable:	LongVariable: Avoid excessively long variable names like contractController
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:77:	LongVariable:	LongVariable: Avoid excessively long variable names like contractController
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:79:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:79:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:79:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:79:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:79:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:79:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:79:	LongVariable:	LongVariable: Avoid excessively long variable names like contractServiceImpl
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:79:	LongVariable:	LongVariable: Avoid excessively long variable names like contractServiceImpl
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:81:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:81:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:84:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testCreateOrModifyContract method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:84:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testCreateOrModifyContract method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:84:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:84:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:85:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "token" appears 36 times in this file; the first occurrence is on line 85
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:85:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "token" appears 36 times in this file; the first occurrence is on line 85
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:85:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:85:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:86:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:86:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:86:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:86:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:88:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:88:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:90:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "token1" appears 18 times in this file; the first occurrence is on line 90
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:90:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "token1" appears 18 times in this file; the first occurrence is on line 90
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:90:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:90:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:95:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:95:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:98:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetCreatedContractsbyStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:98:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetCreatedContractsbyStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:98:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:98:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:99:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractIds' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:99:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractIds' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:99:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:99:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:100:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:100:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:100:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:100:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:100:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:100:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:102:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:102:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:103:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:103:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:103:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:103:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:105:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:105:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:108:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:108:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:114:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:114:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:117:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetContractsBySupplierId method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:117:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetContractsBySupplierId method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:117:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:117:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:118:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractDetails' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:118:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractDetails' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:119:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:119:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:120:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:120:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:120:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:120:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:123:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:123:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:124:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:124:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:124:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:124:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:126:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:126:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:129:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:129:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:134:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:134:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:137:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetContract method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:137:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetContract method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:137:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:137:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:138:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:138:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:138:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:138:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:139:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:139:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:140:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:140:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:140:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:140:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:142:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:142:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:145:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:145:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:150:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:150:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:153:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetContractsOfAllSuppliers method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:153:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetContractsOfAllSuppliers method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:153:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:153:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:154:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractDetails' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:154:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractDetails' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:155:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:155:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:156:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:156:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:156:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:156:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:156:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:156:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:159:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:159:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:160:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:160:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:160:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:160:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:162:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:162:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:165:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:165:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:170:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:170:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:173:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetActiveContractsOfAllSuppliers method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:173:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetActiveContractsOfAllSuppliers method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:173:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:173:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:174:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'idList' (lines '174'-'194').
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:174:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'idList' (lines '174'-'194').
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:174:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'idList' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:174:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'idList' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:174:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:174:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:176:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ids' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:176:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ids' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:176:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:176:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:177:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:177:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:179:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:179:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:179:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'objects' (lines '179'-'180').
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:179:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'objects' (lines '179'-'180').
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:180:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'objects' (lines '180'-'181').
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:180:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'objects' (lines '180'-'181').
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:185:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:185:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:186:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:186:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:186:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:186:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:188:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:188:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:191:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:191:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:197:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:197:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:200:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetAllActiveContracts method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:200:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetAllActiveContracts method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:200:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:200:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:201:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractDetails' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:201:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractDetails' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:202:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:202:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:203:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:203:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:203:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:203:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:203:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:203:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:206:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:206:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:207:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:207:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:207:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:207:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:209:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:209:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:212:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:212:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:217:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:217:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:220:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetActiveContractIds method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:220:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetActiveContractIds method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:220:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:220:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:221:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ids' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:221:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ids' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:221:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:221:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:222:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:222:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:223:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:223:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:223:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'objects' (lines '223'-'224').
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:223:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'objects' (lines '223'-'224').
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:224:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'objects' (lines '224'-'225').
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:224:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'objects' (lines '224'-'225').
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:230:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:230:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:231:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:231:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:231:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:231:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:233:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:233:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:236:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:236:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:241:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:241:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:244:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetSuppliersofActiveContracts method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:244:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetSuppliersofActiveContracts method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:244:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:244:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:245:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'suppliers' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:245:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'suppliers' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:245:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:245:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:247:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'detail' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:247:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'detail' could be declared final
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:250:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:250:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:251:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:251:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:251:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:251:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:251:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:251:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:253:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:253:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:256:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ContractControllerTest.java:256:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:28:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:28:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:28:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:28:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:30:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:30:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:30:	SingularField:	SingularField: Perhaps 'proposal' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:30:	SingularField:	SingularField: Perhaps 'proposal' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:30:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'proposal'.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:30:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'proposal'.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:31:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:31:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:31:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:31:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:32:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:32:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:32:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:32:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:32:	SingularField:	SingularField: Perhaps 'supplier' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:32:	SingularField:	SingularField: Perhaps 'supplier' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:32:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'supplier'.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:32:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'supplier'.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:33:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:33:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:33:	SingularField:	SingularField: Perhaps 'requirement' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:33:	SingularField:	SingularField: Perhaps 'requirement' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:33:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'requirement'.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:33:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'requirement'.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:34:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:34:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:34:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:34:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:35:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:35:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:35:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:35:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:35:	ShortVariable:	ShortVariable: Avoid variables with short names like bd
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:35:	ShortVariable:	ShortVariable: Avoid variables with short names like bd
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:35:	SingularField:	SingularField: Perhaps 'bd' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:35:	SingularField:	SingularField: Perhaps 'bd' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:35:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'bd'.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:35:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'bd'.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:36:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:36:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:36:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:36:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:40:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:40:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:42:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:42:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:43:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:43:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:46:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:46:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:49:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalDetails' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:49:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalDetails' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:50:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'bd' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:50:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'bd' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:50:	ShortVariable:	ShortVariable: Avoid variables with short names like bd
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:50:	ShortVariable:	ShortVariable: Avoid variables with short names like bd
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:53:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "2022-11-11" appears 4 times in this file; the first occurrence is on line 53
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:53:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "2022-11-11" appears 4 times in this file; the first occurrence is on line 53
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:56:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "status" appears 4 times in this file; the first occurrence is on line 56
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:56:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "status" appears 4 times in this file; the first occurrence is on line 56
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:67:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposals' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:67:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposals' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:67:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:67:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:72:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:72:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:73:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:73:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:73:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the proController field if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:73:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the proController field if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:73:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:73:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:73:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:73:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:75:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:75:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:76:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:76:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:76:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the proService field if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:76:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the proService field if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:76:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:76:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:76:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:76:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:79:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the createProposalTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:79:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the createProposalTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:80:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:80:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:81:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:81:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:81:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:81:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:85:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewAllProposalsAdminTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:85:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewAllProposalsAdminTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:86:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalsList' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:86:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalsList' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:86:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:86:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:87:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:87:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:87:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:87:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:87:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:87:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:89:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:89:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:90:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:90:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:90:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:90:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:94:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewProposalById method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:94:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewProposalById method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:95:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:95:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:96:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:96:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:96:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:96:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:100:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the editProposalStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:100:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the editProposalStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:101:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:101:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:102:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:102:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:102:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:102:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:106:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewProposalsBySupplierTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:106:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewProposalsBySupplierTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:107:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalsList' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:107:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalsList' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:107:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:107:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:108:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:108:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:108:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:108:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:108:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:108:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:110:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:110:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:111:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:111:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:111:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:111:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:115:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the editProposalBySupplierTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:115:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the editProposalBySupplierTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:116:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:116:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:117:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:117:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:117:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:117:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:121:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewtobeRevisitedProposalsTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:121:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewtobeRevisitedProposalsTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:122:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalsList' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:122:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalsList' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:122:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:122:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:123:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:123:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:123:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:123:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:123:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:123:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'p' could be declared final
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:125:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:125:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:126:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:126:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:126:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/ProposalControllerTest.java:126:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:27:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:27:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:27:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:27:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:28:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:28:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:28:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:28:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:28:	ImmutableField:	ImmutableField: Private field 'typeId' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:28:	ImmutableField:	ImmutableField: Private field 'typeId' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:29:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:29:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:29:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:29:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:29:	SingularField:	SingularField: Perhaps 'requirement' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:29:	SingularField:	SingularField: Perhaps 'requirement' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:29:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'requirement'.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:29:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'requirement'.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:30:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:30:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:31:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:31:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:31:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:31:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:31:	SingularField:	SingularField: Perhaps 'type' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:31:	SingularField:	SingularField: Perhaps 'type' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:31:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'type'.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:31:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'type'.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:32:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:32:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:32:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:32:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:32:	LongVariable:	LongVariable: Avoid excessively long variable names like requirementDetails
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:32:	LongVariable:	LongVariable: Avoid excessively long variable names like requirementDetails
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:33:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:33:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:38:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:38:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:40:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:40:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:41:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:41:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:42:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirementDetails' could be declared final
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:42:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirementDetails' could be declared final
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:42:	LongVariable:	LongVariable: Avoid excessively long variable names like requirementDetails
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:42:	LongVariable:	LongVariable: Avoid excessively long variable names like requirementDetails
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:47:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "2022-11-11" appears 4 times in this file; the first occurrence is on line 47
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:47:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "2022-11-11" appears 4 times in this file; the first occurrence is on line 47
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:48:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Description" appears 4 times in this file; the first occurrence is on line 48
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:48:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Description" appears 4 times in this file; the first occurrence is on line 48
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:56:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirements' could be declared final
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:56:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirements' could be declared final
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:56:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:56:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:61:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:61:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:62:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:62:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:62:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the reqController field if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:62:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the reqController field if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:62:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:62:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:62:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:62:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:64:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:64:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:65:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:65:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:65:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the reqService field if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:65:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the reqService field if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:65:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:65:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:65:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:65:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:70:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the createRequirementTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:70:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the createRequirementTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:71:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:71:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:72:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:72:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:72:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:72:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:76:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewAllRequirementsAdminTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:76:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewAllRequirementsAdminTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:77:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirementIds' could be declared final
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:77:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirementIds' could be declared final
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:77:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:77:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:78:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'r' could be declared final
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:78:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'r' could be declared final
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:80:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:80:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:80:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'req' could be declared final
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:80:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'req' could be declared final
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:86:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:86:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:87:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:87:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:87:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:87:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:91:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewAllBySupplierTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:91:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewAllBySupplierTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:92:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirementIds' could be declared final
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:92:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirementIds' could be declared final
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:92:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:92:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:93:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:93:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:93:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:93:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:93:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'r' could be declared final
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:93:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'r' could be declared final
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:95:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:95:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:96:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:96:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:96:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:96:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:100:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewByIdTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:100:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewByIdTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:101:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:101:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:102:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:102:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:102:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:102:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:106:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the editRequirementTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:106:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the editRequirementTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:107:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:107:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:108:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:108:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:108:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:108:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:112:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the deleteRequirementTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:112:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the deleteRequirementTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:113:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:113:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:114:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:114:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:114:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/controller/RequirementControllerTest.java:114:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:12:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:12:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:12:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:12:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:13:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:13:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:14:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:14:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:14:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the globalExceptionHandler field if you want a default access modifier
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:14:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the globalExceptionHandler field if you want a default access modifier
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:14:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:14:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:14:	LongVariable:	LongVariable: Avoid excessively long variable names like globalExceptionHandler
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:14:	LongVariable:	LongVariable: Avoid excessively long variable names like globalExceptionHandler
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:17:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:17:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:18:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:18:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:21:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:21:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:22:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:22:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:25:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:25:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:26:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:26:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:29:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:29:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:30:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:30:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:33:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:33:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:34:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:34:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:37:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:37:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:38:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:38:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:41:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:41:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:42:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:42:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:45:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:45:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:46:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:46:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:49:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:49:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:50:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/exceptionhandling/GlobalExceptionHandlerTest.java:50:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AnswersTest.java:8:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/AnswersTest.java:8:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/AnswersTest.java:8:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/AnswersTest.java:8:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/AnswersTest.java:10:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/AnswersTest.java:10:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/AnswersTest.java:10:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the ans field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:10:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the ans field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:10:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/AnswersTest.java:10:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/AnswersTest.java:10:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/AnswersTest.java:10:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/AnswersTest.java:11:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/AnswersTest.java:11:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/AnswersTest.java:11:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the ques field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:11:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the ques field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:11:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/AnswersTest.java:11:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/AnswersTest.java:11:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/AnswersTest.java:11:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/AnswersTest.java:12:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/AnswersTest.java:12:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/AnswersTest.java:12:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supp field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:12:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supp field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:12:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/AnswersTest.java:12:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/AnswersTest.java:12:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/AnswersTest.java:12:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/AnswersTest.java:13:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/AnswersTest.java:13:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/AnswersTest.java:13:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the admin field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:13:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the admin field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:13:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/AnswersTest.java:13:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/AnswersTest.java:13:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/AnswersTest.java:13:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/AnswersTest.java:16:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the idTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:16:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the idTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:18:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AnswersTest.java:18:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AnswersTest.java:21:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the nameTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:21:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the nameTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:22:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Yes" appears 4 times in this file; the first occurrence is on line 22
src/test/java/com/example/contractmanagement/model/AnswersTest.java:22:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Yes" appears 4 times in this file; the first occurrence is on line 22
src/test/java/com/example/contractmanagement/model/AnswersTest.java:23:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AnswersTest.java:23:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AnswersTest.java:27:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the questionTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:27:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the questionTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:31:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AnswersTest.java:31:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AnswersTest.java:31:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/model/AnswersTest.java:31:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/model/AnswersTest.java:34:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplierTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:34:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplierTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:38:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AnswersTest.java:38:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AnswersTest.java:38:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/model/AnswersTest.java:38:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/model/AnswersTest.java:41:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contractorTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:41:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contractorTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:45:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AnswersTest.java:45:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AnswersTest.java:45:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/model/AnswersTest.java:45:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/model/AnswersTest.java:48:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the toStringTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:48:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the toStringTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AnswersTest.java:48:	LinguisticNaming:	LinguisticNaming: Linguistics Antipattern - The transform method 'toStringTest' should not return void linguistically
src/test/java/com/example/contractmanagement/model/AnswersTest.java:48:	LinguisticNaming:	LinguisticNaming: Linguistics Antipattern - The transform method 'toStringTest' should not return void linguistically
src/test/java/com/example/contractmanagement/model/AnswersTest.java:57:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AnswersTest.java:57:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AnswersTest.java:57:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/model/AnswersTest.java:57:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:10:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:10:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:10:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:10:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:12:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:12:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:12:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the auth field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:12:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the auth field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:12:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:12:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:12:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:12:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:13:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:13:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:13:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the auth1 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:13:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the auth1 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:13:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:13:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:13:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:13:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:16:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testUid method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:16:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testUid method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:18:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:18:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:22:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testName method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:22:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testName method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:24:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:24:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:28:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testIsValid method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:28:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testIsValid method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:30:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:30:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:30:	UseAssertTrueInsteadOfAssertEquals:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:30:	UseAssertTrueInsteadOfAssertEquals:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:34:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testToString method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:34:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testToString method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:35:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:35:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:35:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:35:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:40:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testRole method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:40:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testRole method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:42:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/AuthResponseTest.java:42:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:17:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/ContractTest.java:17:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/ContractTest.java:17:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/ContractTest.java:17:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/ContractTest.java:17:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/com/example/contractmanagement/model/ContractTest.java:17:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/com/example/contractmanagement/model/ContractTest.java:19:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/ContractTest.java:19:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/ContractTest.java:19:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contract field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:19:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contract field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/ContractTest.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/ContractTest.java:19:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/ContractTest.java:19:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/ContractTest.java:20:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/ContractTest.java:20:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/ContractTest.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/ContractTest.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/ContractTest.java:22:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testId method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:22:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testId method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:24:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:24:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:28:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testContractType method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:28:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testContractType method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:29:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Some Text" appears 9 times in this file; the first occurrence is on line 29
src/test/java/com/example/contractmanagement/model/ContractTest.java:29:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Some Text" appears 9 times in this file; the first occurrence is on line 29
src/test/java/com/example/contractmanagement/model/ContractTest.java:30:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:30:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:33:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testContractDuration method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:33:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testContractDuration method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:35:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:35:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:39:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testContractTermsAndConditions method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:39:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testContractTermsAndConditions method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:41:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:41:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:45:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:45:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:47:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:47:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:52:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testAmenities method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:52:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testAmenities method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:54:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:54:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:58:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testToString method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:58:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testToString method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:65:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:65:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:69:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'tostring' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:69:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'tostring' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:70:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:70:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:74:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/ContractTest.java:74:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/ContractTest.java:75:	CloseResource:	CloseResource: Ensure that resources like this ValidatorFactory object are closed after use
src/test/java/com/example/contractmanagement/model/ContractTest.java:75:	CloseResource:	CloseResource: Ensure that resources like this ValidatorFactory object are closed after use
src/test/java/com/example/contractmanagement/model/ContractTest.java:75:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'factory' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:75:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'factory' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:79:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testContractTypeLength method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:79:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testContractTypeLength method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:79:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/model/ContractTest.java:79:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/model/ContractTest.java:81:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/ContractTest.java:81:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/ContractTest.java:81:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/ContractTest.java:81:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/ContractTest.java:82:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/ContractTest.java:82:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/ContractTest.java:85:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:85:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:86:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:86:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:86:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/ContractTest.java:86:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/ContractTest.java:88:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'violationsNotNull' (lines '88'-'91').
src/test/java/com/example/contractmanagement/model/ContractTest.java:88:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'violationsNotNull' (lines '88'-'91').
src/test/java/com/example/contractmanagement/model/ContractTest.java:88:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violationsNotNull' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:88:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violationsNotNull' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:88:	UnusedLocalVariable:	UnusedLocalVariable: Avoid unused local variables such as 'violationsNotNull'.
src/test/java/com/example/contractmanagement/model/ContractTest.java:88:	UnusedLocalVariable:	UnusedLocalVariable: Avoid unused local variables such as 'violationsNotNull'.
src/test/java/com/example/contractmanagement/model/ContractTest.java:90:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:90:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:90:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/ContractTest.java:90:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/ContractTest.java:95:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testtncLength method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:95:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testtncLength method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:95:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/model/ContractTest.java:95:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/model/ContractTest.java:97:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/ContractTest.java:97:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/ContractTest.java:97:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/ContractTest.java:97:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/ContractTest.java:98:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/ContractTest.java:98:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/ContractTest.java:100:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:100:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:101:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:101:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:101:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/ContractTest.java:101:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/ContractTest.java:103:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'violationsNotNull' (lines '103'-'106').
src/test/java/com/example/contractmanagement/model/ContractTest.java:103:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'violationsNotNull' (lines '103'-'106').
src/test/java/com/example/contractmanagement/model/ContractTest.java:103:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violationsNotNull' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:103:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violationsNotNull' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:103:	UnusedLocalVariable:	UnusedLocalVariable: Avoid unused local variables such as 'violationsNotNull'.
src/test/java/com/example/contractmanagement/model/ContractTest.java:103:	UnusedLocalVariable:	UnusedLocalVariable: Avoid unused local variables such as 'violationsNotNull'.
src/test/java/com/example/contractmanagement/model/ContractTest.java:105:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:105:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:105:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/ContractTest.java:105:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/ContractTest.java:110:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testAmenitiesLength method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:110:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testAmenitiesLength method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:112:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/ContractTest.java:112:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/ContractTest.java:112:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/ContractTest.java:112:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/ContractTest.java:113:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/ContractTest.java:113:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/ContractTest.java:116:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:116:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:117:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:117:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:117:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/ContractTest.java:117:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/ContractTest.java:122:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the anothertestContractTypeLength method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:122:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the anothertestContractTypeLength method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:123:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ctype' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:123:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ctype' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:127:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:127:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:128:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:128:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:128:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/ContractTest.java:128:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/ContractTest.java:133:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the anothertesttncLength method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:133:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the anothertesttncLength method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractTest.java:134:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ctype' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:134:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ctype' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:138:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:138:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/ContractTest.java:139:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:139:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractTest.java:139:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/ContractTest.java:139:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/ContractorTest.java:19:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/ContractorTest.java:19:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/ContractorTest.java:19:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/ContractorTest.java:19:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/ContractorTest.java:21:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/ContractorTest.java:21:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/ContractorTest.java:21:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contractor field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:21:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contractor field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/ContractorTest.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/ContractorTest.java:21:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/ContractorTest.java:21:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/ContractorTest.java:22:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/ContractorTest.java:22:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/ContractorTest.java:22:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/ContractorTest.java:22:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/ContractorTest.java:23:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/ContractorTest.java:23:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/ContractorTest.java:23:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contractor1 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:23:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contractor1 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:23:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/ContractorTest.java:23:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/ContractorTest.java:23:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/ContractorTest.java:23:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/ContractorTest.java:26:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testTwoArgs method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:26:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testTwoArgs method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:26:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/model/ContractorTest.java:26:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/model/ContractorTest.java:27:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractorTest.java:27:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractorTest.java:28:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractorTest.java:28:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractorTest.java:32:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testId method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:32:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testId method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:34:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractorTest.java:34:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractorTest.java:39:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testName method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:39:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testName method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:40:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "contractor" appears 6 times in this file; the first occurrence is on line 40
src/test/java/com/example/contractmanagement/model/ContractorTest.java:40:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "contractor" appears 6 times in this file; the first occurrence is on line 40
src/test/java/com/example/contractmanagement/model/ContractorTest.java:41:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractorTest.java:41:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractorTest.java:45:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testPassword method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:45:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testPassword method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:47:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractorTest.java:47:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractorTest.java:52:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testToString method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:52:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testToString method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:56:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'tostring' could be declared final
src/test/java/com/example/contractmanagement/model/ContractorTest.java:56:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'tostring' could be declared final
src/test/java/com/example/contractmanagement/model/ContractorTest.java:57:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractorTest.java:57:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractorTest.java:61:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/ContractorTest.java:61:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/ContractorTest.java:62:	CloseResource:	CloseResource: Ensure that resources like this ValidatorFactory object are closed after use
src/test/java/com/example/contractmanagement/model/ContractorTest.java:62:	CloseResource:	CloseResource: Ensure that resources like this ValidatorFactory object are closed after use
src/test/java/com/example/contractmanagement/model/ContractorTest.java:62:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'factory' could be declared final
src/test/java/com/example/contractmanagement/model/ContractorTest.java:62:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'factory' could be declared final
src/test/java/com/example/contractmanagement/model/ContractorTest.java:67:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testValidations method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:67:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testValidations method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:69:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/ContractorTest.java:69:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/ContractorTest.java:69:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/ContractorTest.java:69:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/ContractorTest.java:70:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/ContractorTest.java:70:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/ContractorTest.java:72:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/ContractorTest.java:72:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/ContractorTest.java:73:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractorTest.java:73:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractorTest.java:73:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/ContractorTest.java:73:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/ContractorTest.java:77:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the anothertestValidations method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:77:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the anothertestValidations method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:79:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/ContractorTest.java:79:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/ContractorTest.java:79:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/ContractorTest.java:79:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/ContractorTest.java:80:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/ContractorTest.java:80:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/ContractorTest.java:82:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/ContractorTest.java:82:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/ContractorTest.java:83:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractorTest.java:83:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractorTest.java:83:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/ContractorTest.java:83:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/ContractorTest.java:87:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the antestValidations method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:87:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the antestValidations method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ContractorTest.java:89:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/ContractorTest.java:89:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/ContractorTest.java:89:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/ContractorTest.java:89:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/ContractorTest.java:90:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/ContractorTest.java:90:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/ContractorTest.java:92:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/ContractorTest.java:92:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/ContractorTest.java:93:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractorTest.java:93:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ContractorTest.java:93:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/ContractorTest.java:93:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:15:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:15:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:15:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:15:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:16:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:16:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:16:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:16:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:17:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:17:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:17:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the feedback field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:17:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the feedback field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:17:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:17:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:19:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testId method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:19:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testId method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:21:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:21:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:24:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testContract method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:24:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testContract method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:25:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract' could be declared final
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:25:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract' could be declared final
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:33:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:33:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:36:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testFeedbackText method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:36:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testFeedbackText method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:38:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:38:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:42:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testToString method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:42:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testToString method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:45:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract' could be declared final
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:45:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract' could be declared final
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:52:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'tostring' could be declared final
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:52:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'tostring' could be declared final
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:53:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:53:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:57:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:57:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:58:	CloseResource:	CloseResource: Ensure that resources like this ValidatorFactory object are closed after use
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:58:	CloseResource:	CloseResource: Ensure that resources like this ValidatorFactory object are closed after use
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:58:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'factory' could be declared final
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:58:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'factory' could be declared final
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:62:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testtncLength method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:62:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testtncLength method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:64:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:64:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:64:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:64:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:65:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:65:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:67:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:67:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:68:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:68:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:68:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/FeedbackTest.java:68:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:10:	DuplicateImports:	DuplicateImports: Avoid duplicate imports such as 'org.junit.jupiter.api.Assertions.assertEquals'
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:10:	DuplicateImports:	DuplicateImports: Avoid duplicate imports such as 'org.junit.jupiter.api.Assertions.assertEquals'
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:16:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:16:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:16:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:16:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:18:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:18:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:18:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the messageResponse field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:18:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the messageResponse field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:18:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:18:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:18:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:18:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:20:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the message1 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:20:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the message1 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:20:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:20:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:22:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the message2 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:22:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the message2 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:22:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:22:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:22:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:22:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:25:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:25:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:27:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:27:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:31:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:31:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:33:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:33:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:37:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:37:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:39:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:39:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:44:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:44:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:44:	JUnitTestsShouldIncludeAssert:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:44:	JUnitTestsShouldIncludeAssert:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:44:	UncommentedEmptyMethodBody:	UncommentedEmptyMethodBody: Document empty method body
src/test/java/com/example/contractmanagement/model/MessageResponseTest.java:44:	UncommentedEmptyMethodBody:	UncommentedEmptyMethodBody: Document empty method body
src/test/java/com/example/contractmanagement/model/ProposalTest.java:12:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/ProposalTest.java:12:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/ProposalTest.java:12:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/ProposalTest.java:12:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/ProposalTest.java:14:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/ProposalTest.java:14:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/ProposalTest.java:14:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the proposal field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ProposalTest.java:14:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the proposal field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ProposalTest.java:14:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/ProposalTest.java:14:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/ProposalTest.java:14:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/ProposalTest.java:14:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/ProposalTest.java:17:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testId method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ProposalTest.java:17:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testId method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ProposalTest.java:19:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ProposalTest.java:19:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ProposalTest.java:23:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testProposalDate method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ProposalTest.java:23:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testProposalDate method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ProposalTest.java:24:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'date' could be declared final
src/test/java/com/example/contractmanagement/model/ProposalTest.java:24:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'date' could be declared final
src/test/java/com/example/contractmanagement/model/ProposalTest.java:26:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ProposalTest.java:26:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ProposalTest.java:30:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testQuotation method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ProposalTest.java:30:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testQuotation method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ProposalTest.java:31:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'bd' could be declared final
src/test/java/com/example/contractmanagement/model/ProposalTest.java:31:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'bd' could be declared final
src/test/java/com/example/contractmanagement/model/ProposalTest.java:31:	ShortVariable:	ShortVariable: Avoid variables with short names like bd
src/test/java/com/example/contractmanagement/model/ProposalTest.java:31:	ShortVariable:	ShortVariable: Avoid variables with short names like bd
src/test/java/com/example/contractmanagement/model/ProposalTest.java:33:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ProposalTest.java:33:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ProposalTest.java:37:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ProposalTest.java:37:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ProposalTest.java:39:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ProposalTest.java:39:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ProposalTest.java:43:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testRequirement method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ProposalTest.java:43:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testRequirement method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ProposalTest.java:44:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/model/ProposalTest.java:44:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/model/ProposalTest.java:46:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ProposalTest.java:46:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ProposalTest.java:50:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testSupplier method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ProposalTest.java:50:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testSupplier method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ProposalTest.java:51:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/model/ProposalTest.java:51:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/model/ProposalTest.java:53:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ProposalTest.java:53:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ProposalTest.java:57:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testToString method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ProposalTest.java:57:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testToString method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/ProposalTest.java:58:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/model/ProposalTest.java:58:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/model/ProposalTest.java:61:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/model/ProposalTest.java:61:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/model/ProposalTest.java:63:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/model/ProposalTest.java:63:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/model/ProposalTest.java:67:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'bd' could be declared final
src/test/java/com/example/contractmanagement/model/ProposalTest.java:67:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'bd' could be declared final
src/test/java/com/example/contractmanagement/model/ProposalTest.java:67:	ShortVariable:	ShortVariable: Avoid variables with short names like bd
src/test/java/com/example/contractmanagement/model/ProposalTest.java:67:	ShortVariable:	ShortVariable: Avoid variables with short names like bd
src/test/java/com/example/contractmanagement/model/ProposalTest.java:69:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'string' could be declared final
src/test/java/com/example/contractmanagement/model/ProposalTest.java:69:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'string' could be declared final
src/test/java/com/example/contractmanagement/model/ProposalTest.java:70:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/ProposalTest.java:70:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/RequirementTest.java:17:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/RequirementTest.java:17:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/RequirementTest.java:17:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/RequirementTest.java:17:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/RequirementTest.java:19:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/RequirementTest.java:19:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/RequirementTest.java:19:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the requirement field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/RequirementTest.java:19:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the requirement field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/RequirementTest.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/RequirementTest.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/RequirementTest.java:19:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/RequirementTest.java:19:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/RequirementTest.java:20:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/RequirementTest.java:20:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/RequirementTest.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/RequirementTest.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/RequirementTest.java:22:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testId method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/RequirementTest.java:22:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testId method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/RequirementTest.java:24:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/RequirementTest.java:24:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/RequirementTest.java:28:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testDescription method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/RequirementTest.java:28:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testDescription method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/RequirementTest.java:30:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/RequirementTest.java:30:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/RequirementTest.java:34:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testDeliveryDate method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/RequirementTest.java:34:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testDeliveryDate method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/RequirementTest.java:35:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "2022-11-11" appears 4 times in this file; the first occurrence is on line 35
src/test/java/com/example/contractmanagement/model/RequirementTest.java:35:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "2022-11-11" appears 4 times in this file; the first occurrence is on line 35
src/test/java/com/example/contractmanagement/model/RequirementTest.java:36:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/RequirementTest.java:36:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/RequirementTest.java:40:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testTypes method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/RequirementTest.java:40:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testTypes method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/RequirementTest.java:41:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/model/RequirementTest.java:41:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/model/RequirementTest.java:43:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/RequirementTest.java:43:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/RequirementTest.java:47:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testToString method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/RequirementTest.java:47:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testToString method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/RequirementTest.java:51:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/model/RequirementTest.java:51:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/model/RequirementTest.java:54:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'toString' could be declared final
src/test/java/com/example/contractmanagement/model/RequirementTest.java:54:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'toString' could be declared final
src/test/java/com/example/contractmanagement/model/RequirementTest.java:55:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/RequirementTest.java:55:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/RequirementTest.java:59:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/RequirementTest.java:59:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/RequirementTest.java:60:	CloseResource:	CloseResource: Ensure that resources like this ValidatorFactory object are closed after use
src/test/java/com/example/contractmanagement/model/RequirementTest.java:60:	CloseResource:	CloseResource: Ensure that resources like this ValidatorFactory object are closed after use
src/test/java/com/example/contractmanagement/model/RequirementTest.java:60:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'factory' could be declared final
src/test/java/com/example/contractmanagement/model/RequirementTest.java:60:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'factory' could be declared final
src/test/java/com/example/contractmanagement/model/RequirementTest.java:64:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testDescriptionLength method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/RequirementTest.java:64:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testDescriptionLength method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/RequirementTest.java:66:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/RequirementTest.java:66:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/RequirementTest.java:66:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/RequirementTest.java:66:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/RequirementTest.java:67:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/RequirementTest.java:67:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/RequirementTest.java:70:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/RequirementTest.java:70:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/RequirementTest.java:71:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/RequirementTest.java:71:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/RequirementTest.java:71:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/RequirementTest.java:71:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:19:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:19:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:21:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:21:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:21:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the secretQuestions field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:21:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the secretQuestions field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:21:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:21:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:22:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:22:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:22:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:22:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:24:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testId method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:24:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testId method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:26:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:26:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:30:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestQuestion method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:30:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestQuestion method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:30:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'TestQuestion' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:30:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'TestQuestion' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:32:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:32:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:36:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:36:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:37:	CloseResource:	CloseResource: Ensure that resources like this ValidatorFactory object are closed after use
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:37:	CloseResource:	CloseResource: Ensure that resources like this ValidatorFactory object are closed after use
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:37:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'factory' could be declared final
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:37:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'factory' could be declared final
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:41:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testQuestionLength method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:41:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testQuestionLength method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:41:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:41:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:41:	DetachedTestCase:	DetachedTestCase: Probable detached JUnit test case.
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:41:	DetachedTestCase:	DetachedTestCase: Probable detached JUnit test case.
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:43:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:43:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:43:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:43:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:44:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:44:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:46:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:46:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:47:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:47:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:47:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:47:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:50:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testToString method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:50:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testToString method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:53:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SecretQuestionsTest.java:53:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:10:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:10:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:10:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:10:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:11:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:11:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:11:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplierDetails field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:11:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplierDetails field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:11:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:11:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:11:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:11:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:12:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "supplier" appears 9 times in this file; the first occurrence is on line 12
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:12:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "supplier" appears 9 times in this file; the first occurrence is on line 12
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:12:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:12:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:12:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplierDetails1 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:12:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplierDetails1 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:12:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:12:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:12:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:12:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:15:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the allArgsTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:15:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the allArgsTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:16:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:16:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:16:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:16:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:20:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:20:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:22:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:22:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:26:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:26:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:28:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:28:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:33:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:33:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:35:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:35:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:40:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:40:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:42:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:42:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:46:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testTypeId method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:46:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testTypeId method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:48:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:48:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:52:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:52:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:58:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:58:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:58:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/model/SupplierDetailsTest.java:58:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/model/SupplierTest.java:23:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/SupplierTest.java:23:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/SupplierTest.java:23:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:23:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:24:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/SupplierTest.java:24:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/SupplierTest.java:24:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:24:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:25:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/SupplierTest.java:25:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/SupplierTest.java:25:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplier field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierTest.java:25:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplier field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierTest.java:25:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:25:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:25:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/SupplierTest.java:25:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/SupplierTest.java:26:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/SupplierTest.java:26:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/SupplierTest.java:26:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the type field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierTest.java:26:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the type field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierTest.java:26:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:26:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:26:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/SupplierTest.java:26:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/SupplierTest.java:27:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/SupplierTest.java:27:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/SupplierTest.java:27:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contract1 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierTest.java:27:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contract1 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierTest.java:27:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:27:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:27:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/SupplierTest.java:27:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/SupplierTest.java:28:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/SupplierTest.java:28:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/SupplierTest.java:28:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contract2 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierTest.java:28:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contract2 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierTest.java:28:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:28:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:28:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/SupplierTest.java:28:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/SupplierTest.java:31:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:31:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:33:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:33:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:37:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:37:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:38:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "supplier" appears 7 times in this file; the first occurrence is on line 38
src/test/java/com/example/contractmanagement/model/SupplierTest.java:38:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "supplier" appears 7 times in this file; the first occurrence is on line 38
src/test/java/com/example/contractmanagement/model/SupplierTest.java:39:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:39:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:43:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:43:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:45:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:45:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:50:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:50:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:52:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:52:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:57:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:57:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:59:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:59:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:64:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:64:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:68:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:68:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:72:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:72:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:87:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/test/java/com/example/contractmanagement/model/SupplierTest.java:87:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/test/java/com/example/contractmanagement/model/SupplierTest.java:87:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/model/SupplierTest.java:87:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/model/SupplierTest.java:92:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:92:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:96:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:96:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/SupplierTest.java:105:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:105:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:105:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/model/SupplierTest.java:105:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/model/SupplierTest.java:109:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the setUp method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierTest.java:109:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the setUp method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierTest.java:110:	CloseResource:	CloseResource: Ensure that resources like this ValidatorFactory object are closed after use
src/test/java/com/example/contractmanagement/model/SupplierTest.java:110:	CloseResource:	CloseResource: Ensure that resources like this ValidatorFactory object are closed after use
src/test/java/com/example/contractmanagement/model/SupplierTest.java:110:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'factory' could be declared final
src/test/java/com/example/contractmanagement/model/SupplierTest.java:110:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'factory' could be declared final
src/test/java/com/example/contractmanagement/model/SupplierTest.java:115:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testPasswordValidations method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierTest.java:115:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testPasswordValidations method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierTest.java:117:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/SupplierTest.java:117:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/SupplierTest.java:117:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/SupplierTest.java:117:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/SupplierTest.java:118:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/SupplierTest.java:118:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/SupplierTest.java:119:	EmptyStatementNotInLoop:	EmptyStatementNotInLoop: An empty statement (semicolon) not part of a loop
src/test/java/com/example/contractmanagement/model/SupplierTest.java:119:	EmptyStatementNotInLoop:	EmptyStatementNotInLoop: An empty statement (semicolon) not part of a loop
src/test/java/com/example/contractmanagement/model/SupplierTest.java:120:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/SupplierTest.java:120:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/SupplierTest.java:121:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:121:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:121:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/SupplierTest.java:121:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/SupplierTest.java:126:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the anothertestPasswordValidations method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierTest.java:126:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the anothertestPasswordValidations method if you want a default access modifier
src/test/java/com/example/contractmanagement/model/SupplierTest.java:128:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/SupplierTest.java:128:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/model/SupplierTest.java:128:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/SupplierTest.java:128:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/model/SupplierTest.java:129:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/SupplierTest.java:129:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/test/java/com/example/contractmanagement/model/SupplierTest.java:130:	EmptyStatementNotInLoop:	EmptyStatementNotInLoop: An empty statement (semicolon) not part of a loop
src/test/java/com/example/contractmanagement/model/SupplierTest.java:130:	EmptyStatementNotInLoop:	EmptyStatementNotInLoop: An empty statement (semicolon) not part of a loop
src/test/java/com/example/contractmanagement/model/SupplierTest.java:131:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/SupplierTest.java:131:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'violations' could be declared final
src/test/java/com/example/contractmanagement/model/SupplierTest.java:132:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:132:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/SupplierTest.java:132:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/SupplierTest.java:132:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/model/TypesTest.java:13:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/TypesTest.java:13:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/model/TypesTest.java:13:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:13:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:14:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/TypesTest.java:14:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/TypesTest.java:14:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the type field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/TypesTest.java:14:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the type field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/TypesTest.java:14:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:14:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:14:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/TypesTest.java:14:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/TypesTest.java:15:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/TypesTest.java:15:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/TypesTest.java:15:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the suppliers field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/TypesTest.java:15:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the suppliers field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/TypesTest.java:15:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:15:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:15:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/TypesTest.java:15:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/TypesTest.java:15:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/model/TypesTest.java:15:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/model/TypesTest.java:17:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/TypesTest.java:17:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/TypesTest.java:17:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplier1 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/TypesTest.java:17:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplier1 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/TypesTest.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:17:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/TypesTest.java:17:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/TypesTest.java:18:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the type1 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/TypesTest.java:18:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the type1 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/TypesTest.java:18:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:18:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:18:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/TypesTest.java:18:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/TypesTest.java:19:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/TypesTest.java:19:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/model/TypesTest.java:19:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplier2 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/TypesTest.java:19:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplier2 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/TypesTest.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:19:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/TypesTest.java:19:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/TypesTest.java:20:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the type2 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/TypesTest.java:20:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the type2 field if you want a default access modifier
src/test/java/com/example/contractmanagement/model/TypesTest.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:20:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/TypesTest.java:20:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/model/TypesTest.java:23:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:23:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:25:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/TypesTest.java:25:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/TypesTest.java:29:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:29:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:30:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "type1" appears 4 times in this file; the first occurrence is on line 30
src/test/java/com/example/contractmanagement/model/TypesTest.java:30:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "type1" appears 4 times in this file; the first occurrence is on line 30
src/test/java/com/example/contractmanagement/model/TypesTest.java:31:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/TypesTest.java:31:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/TypesTest.java:35:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:35:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:39:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/TypesTest.java:39:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/TypesTest.java:43:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:43:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/model/TypesTest.java:46:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/TypesTest.java:46:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/model/TypesTest.java:46:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/model/TypesTest.java:46:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:33:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:33:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:36:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:36:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:36:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:36:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:38:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:38:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:38:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:38:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:40:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:40:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:42:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:42:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:42:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:42:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:48:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:48:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:49:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:49:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:51:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedType' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:51:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedType' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:53:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:53:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:61:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Amenities" appears 6 times in this file; the first occurrence is on line 61
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:61:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Amenities" appears 6 times in this file; the first occurrence is on line 61
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:61:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Termns and Conditions" appears 6 times in this file; the first occurrence is on line 61
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:61:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Termns and Conditions" appears 6 times in this file; the first occurrence is on line 61
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:61:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "contract type" appears 6 times in this file; the first occurrence is on line 61
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:61:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "contract type" appears 6 times in this file; the first occurrence is on line 61
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:61:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:61:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:62:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedContract' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:62:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedContract' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:63:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:63:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:65:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract1' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:65:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract1' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:66:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:66:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:68:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract2' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:68:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract2' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:69:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:69:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:71:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract3' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:71:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract3' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:72:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:72:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:74:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract4' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:74:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract4' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:75:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:75:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:77:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract5' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:77:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract5' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:78:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:78:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:80:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:80:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:80:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'mcontract' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:80:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'mcontract' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:81:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Active" appears 9 times in this file; the first occurrence is on line 81
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:81:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Active" appears 9 times in this file; the first occurrence is on line 81
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:81:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:81:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:82:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'msavedContract' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:82:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'msavedContract' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:83:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:83:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:83:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:83:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:83:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:83:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:84:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:84:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:84:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:84:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:90:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testFindByStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:90:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testFindByStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:93:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:93:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:94:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:94:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:94:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:94:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:99:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testFindBySupplierIdAndStatusContains method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:99:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testFindBySupplierIdAndStatusContains method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:99:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:99:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:101:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:101:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:102:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:102:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:104:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:104:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:104:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:104:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:105:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:105:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:105:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:105:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:111:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testFindBySupplierId method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:111:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testFindBySupplierId method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:112:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:112:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:113:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:113:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:115:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:115:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:115:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:115:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:121:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testFindById method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:121:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testFindById method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:121:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:121:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:123:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:123:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:123:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:123:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:125:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:125:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:125:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:125:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:130:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testFindAll method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:130:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testFindAll method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:132:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:132:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:133:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:133:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:133:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:133:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:134:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:134:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:146:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:146:	CommentSize:	CommentSize: Comment is too large: Line too long
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:152:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testFindByStatuses method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:152:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testFindByStatuses method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:152:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:152:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:154:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'statuses' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:154:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'statuses' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:154:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:154:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:160:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'suppliers' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:160:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'suppliers' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:164:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:164:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:165:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:165:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:165:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:165:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:166:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:166:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:166:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:166:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:171:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testFindByStatusContains method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:171:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testFindByStatusContains method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:172:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:172:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:173:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:173:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:173:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:173:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:179:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetIdAndStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:179:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetIdAndStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:180:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'objects' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:180:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'objects' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:182:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:182:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:182:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:182:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:183:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'array' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:183:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'array' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:184:	GuardLogStatement:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:184:	GuardLogStatement:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:190:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testAnotherGetIdAndStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:190:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testAnotherGetIdAndStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:191:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'objects' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:191:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'objects' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:193:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:193:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:193:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:193:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:194:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'array' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:194:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'array' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:195:	GuardLogStatement:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:195:	GuardLogStatement:	GuardLogStatement: Logger calls should be surrounded by log level guards.
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:201:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetSuppliers method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:201:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetSuppliers method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:202:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'suppliers' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:202:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'suppliers' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:204:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:204:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:204:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:204:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:205:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:205:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:205:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:205:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:205:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 's' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractRepositoryTest.java:205:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 's' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:4:	UnusedImports:	UnusedImports: Avoid unused imports such as 'org.junit.jupiter.api.Assertions'
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:4:	UnusedImports:	UnusedImports: Avoid unused imports such as 'org.junit.jupiter.api.Assertions'
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:8:	DuplicateImports:	DuplicateImports: Avoid duplicate imports such as 'org.junit.jupiter.api.Assertions.assertNotNull'
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:8:	DuplicateImports:	DuplicateImports: Avoid duplicate imports such as 'org.junit.jupiter.api.Assertions.assertNotNull'
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:19:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:19:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:19:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:19:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:22:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:22:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:22:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:22:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:26:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the createAdmin method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:26:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the createAdmin method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:27:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:27:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:33:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedAdmin' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:33:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedAdmin' could be declared final
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:35:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ContractorRepositoryTest.java:35:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:19:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:19:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:19:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:19:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:23:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:23:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:23:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:23:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:27:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:27:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:30:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:30:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:32:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:32:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:36:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'bd' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:36:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'bd' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:36:	ShortVariable:	ShortVariable: Avoid variables with short names like bd
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:36:	ShortVariable:	ShortVariable: Avoid variables with short names like bd
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:42:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testCreateProposal method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:42:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testCreateProposal method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:43:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:43:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:44:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedProposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:44:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedProposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:45:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:45:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:49:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testViewProposalById method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:49:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testViewProposalById method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:50:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:50:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:51:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedProposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:51:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedProposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:52:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:52:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:52:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:52:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:52:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'retrievedProposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:52:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'retrievedProposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:53:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:53:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:58:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testViewProposalsByStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:58:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testViewProposalsByStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:59:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:59:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:61:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:61:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:61:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'retrievedProposals' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:61:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'retrievedProposals' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:61:	LongVariable:	LongVariable: Avoid excessively long variable names like retrievedProposals
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:61:	LongVariable:	LongVariable: Avoid excessively long variable names like retrievedProposals
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:62:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:62:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:66:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testViewAllProposals method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:66:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testViewAllProposals method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:67:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:67:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:69:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'retrievedProposals' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:69:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'retrievedProposals' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:69:	LongVariable:	LongVariable: Avoid excessively long variable names like retrievedProposals
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:69:	LongVariable:	LongVariable: Avoid excessively long variable names like retrievedProposals
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:70:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:70:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:75:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testUpdateProposal method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:75:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testUpdateProposal method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:76:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:76:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:78:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'proposal0' (lines '78'-'79').
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:78:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'proposal0' (lines '78'-'79').
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:78:	UnusedAssignment:	UnusedAssignment: The initializer for variable 'proposal0' is never used (overwritten on line 79)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:78:	UnusedAssignment:	UnusedAssignment: The initializer for variable 'proposal0' is never used (overwritten on line 79)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:80:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:80:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:81:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'updatedProposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:81:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'updatedProposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:82:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:82:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:82:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:82:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:82:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'retrievedProposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:82:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'retrievedProposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:83:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:83:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:88:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testDeleteProposal method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:88:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testDeleteProposal method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:88:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:88:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:89:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:89:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:91:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:91:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:91:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:91:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:91:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'existsBeforeDel' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:91:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'existsBeforeDel' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:93:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:93:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:93:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:93:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:93:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'existAfterDel' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:93:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'existAfterDel' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:94:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:94:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:95:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:95:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:99:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testViewProposalsBySupplier method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:99:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testViewProposalsBySupplier method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:100:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:100:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:101:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedProposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:101:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedProposal' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:102:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:102:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:102:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'retrievedProposals' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:102:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'retrievedProposals' could be declared final
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:102:	LongVariable:	LongVariable: Avoid excessively long variable names like retrievedProposals
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:102:	LongVariable:	LongVariable: Avoid excessively long variable names like retrievedProposals
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:103:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/ProposalRepositoryTest.java:103:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:21:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:21:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:21:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:21:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:24:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:24:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:24:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:24:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:27:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:27:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:30:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:30:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:37:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testCreateRequirement method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:37:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testCreateRequirement method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:38:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:38:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:39:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedRequirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:39:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedRequirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:40:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:40:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:45:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testViewRequirementById method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:45:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testViewRequirementById method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:46:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:46:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:47:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedRequirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:47:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedRequirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:48:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:48:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:48:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:48:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:48:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'retrievedRequirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:48:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'retrievedRequirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:48:	LongVariable:	LongVariable: Avoid excessively long variable names like retrievedRequirement
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:48:	LongVariable:	LongVariable: Avoid excessively long variable names like retrievedRequirement
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:49:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:49:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:53:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testViewRequirementsByType method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:53:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testViewRequirementsByType method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:54:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:54:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:55:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedRequirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:55:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedRequirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:56:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:56:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:56:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'retrievedRequirements' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:56:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'retrievedRequirements' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:56:	LongVariable:	LongVariable: Avoid excessively long variable names like retrievedRequirements
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:56:	LongVariable:	LongVariable: Avoid excessively long variable names like retrievedRequirements
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:57:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:57:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:61:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testViewAllRequirements method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:61:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testViewAllRequirements method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:62:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:62:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:63:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedRequirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:63:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedRequirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:64:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'retrievedRequirements' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:64:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'retrievedRequirements' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:64:	LongVariable:	LongVariable: Avoid excessively long variable names like retrievedRequirements
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:64:	LongVariable:	LongVariable: Avoid excessively long variable names like retrievedRequirements
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:65:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:65:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:69:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testEditRequirement method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:69:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testEditRequirement method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:70:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:70:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:72:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'requirement0' (lines '72'-'73').
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:72:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'requirement0' (lines '72'-'73').
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:72:	UnusedAssignment:	UnusedAssignment: The initializer for variable 'requirement0' is never used (overwritten on line 73)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:72:	UnusedAssignment:	UnusedAssignment: The initializer for variable 'requirement0' is never used (overwritten on line 73)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:74:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:74:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:75:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'updatedRequirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:75:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'updatedRequirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:75:	LongVariable:	LongVariable: Avoid excessively long variable names like updatedRequirement
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:75:	LongVariable:	LongVariable: Avoid excessively long variable names like updatedRequirement
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:76:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:76:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:76:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:76:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:76:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'retrievedRequirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:76:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'retrievedRequirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:76:	LongVariable:	LongVariable: Avoid excessively long variable names like retrievedRequirement
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:76:	LongVariable:	LongVariable: Avoid excessively long variable names like retrievedRequirement
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:77:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:77:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:82:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testDeleteRequirement method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:82:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testDeleteRequirement method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:82:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:82:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:83:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:83:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:85:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:85:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:85:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:85:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:85:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'existsBeforeDel' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:85:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'existsBeforeDel' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:87:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:87:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:87:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:87:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:87:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'existAfterDel' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:87:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'existAfterDel' could be declared final
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:88:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:88:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:89:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/RequirementRepositoryTest.java:89:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/SecretQuestionsRepositoryTest.java:21:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/repository/SecretQuestionsRepositoryTest.java:21:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/repository/SecretQuestionsRepositoryTest.java:24:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/SecretQuestionsRepositoryTest.java:24:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/SecretQuestionsRepositoryTest.java:24:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/SecretQuestionsRepositoryTest.java:24:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/SecretQuestionsRepositoryTest.java:24:	LongVariable:	LongVariable: Avoid excessively long variable names like secretQuestionsRepo
src/test/java/com/example/contractmanagement/repository/SecretQuestionsRepositoryTest.java:24:	LongVariable:	LongVariable: Avoid excessively long variable names like secretQuestionsRepo
src/test/java/com/example/contractmanagement/repository/SecretQuestionsRepositoryTest.java:27:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testFindAllQuestions method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/SecretQuestionsRepositoryTest.java:27:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testFindAllQuestions method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/SecretQuestionsRepositoryTest.java:28:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'question' could be declared final
src/test/java/com/example/contractmanagement/repository/SecretQuestionsRepositoryTest.java:28:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'question' could be declared final
src/test/java/com/example/contractmanagement/repository/SecretQuestionsRepositoryTest.java:32:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/SecretQuestionsRepositoryTest.java:32:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/SecretQuestionsRepositoryTest.java:32:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/SecretQuestionsRepositoryTest.java:32:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:21:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:21:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:21:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:21:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:23:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:23:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:23:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:23:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:25:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:25:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:25:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:25:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:27:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:27:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:27:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:27:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:30:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the createSupplierTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:30:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the createSupplierTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:31:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:31:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:34:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedType' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:34:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedType' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:36:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:36:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:43:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedSupplier' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:43:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedSupplier' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:45:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:45:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:49:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the findByTypeIdTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:49:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the findByTypeIdTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:50:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:50:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:53:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedType' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:53:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedType' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:55:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:55:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:64:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:64:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:64:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:64:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:64:	SimplifyBooleanAssertion:	SimplifyBooleanAssertion: assertTrue(!expr) can be replaced by assertFalse(expr)
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:64:	SimplifyBooleanAssertion:	SimplifyBooleanAssertion: assertTrue(!expr) can be replaced by assertFalse(expr)
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:70:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the findAllContractsFromSupplierIdTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:70:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the findAllContractsFromSupplierIdTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:71:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:71:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:74:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedType' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:74:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedType' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:76:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:76:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:83:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedSupplier' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:83:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedSupplier' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:85:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:85:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract' could be declared final
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:95:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:95:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:95:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:95:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:95:	SimplifyBooleanAssertion:	SimplifyBooleanAssertion: assertTrue(!expr) can be replaced by assertFalse(expr)
src/test/java/com/example/contractmanagement/repository/SupplierRepositoryTest.java:95:	SimplifyBooleanAssertion:	SimplifyBooleanAssertion: assertTrue(!expr) can be replaced by assertFalse(expr)
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:21:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:21:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:21:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:21:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:23:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:23:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:23:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:23:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:25:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:25:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:25:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:25:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:28:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the createTypesTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:28:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the createTypesTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:29:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:29:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:33:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedType' could be declared final
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:33:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedType' could be declared final
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:35:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:35:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:39:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the findSuppliersByTypeIdTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:39:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the findSuppliersByTypeIdTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:40:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:40:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:43:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedType' could be declared final
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:43:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'savedType' could be declared final
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:45:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:45:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:54:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:54:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:54:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:54:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:54:	SimplifyBooleanAssertion:	SimplifyBooleanAssertion: assertTrue(!expr) can be replaced by assertFalse(expr)
src/test/java/com/example/contractmanagement/repository/TypesRepositoryTest.java:54:	SimplifyBooleanAssertion:	SimplifyBooleanAssertion: assertTrue(!expr) can be replaced by assertFalse(expr)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:42:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:42:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:42:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:42:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:42:	TooManyFields:	TooManyFields: Too many fields
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:42:	TooManyFields:	TooManyFields: Too many fields
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:42:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:42:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:44:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:44:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:44:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:44:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:44:	ImmutableField:	ImmutableField: Private field 'contractType' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:44:	ImmutableField:	ImmutableField: Private field 'contractType' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:45:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:45:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:45:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:45:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:45:	ImmutableField:	ImmutableField: Private field 'duration' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:45:	ImmutableField:	ImmutableField: Private field 'duration' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:46:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:46:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:46:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the tnc field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:46:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the tnc field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:46:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:46:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:46:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:46:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:47:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:47:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:47:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:47:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:47:	ImmutableField:	ImmutableField: Private field 'supplierId' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:47:	ImmutableField:	ImmutableField: Private field 'supplierId' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:48:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:48:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:48:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:48:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:48:	ImmutableField:	ImmutableField: Private field 'status' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:48:	ImmutableField:	ImmutableField: Private field 'status' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:49:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:49:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:49:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:49:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:49:	ImmutableField:	ImmutableField: Private field 'amenities' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:49:	ImmutableField:	ImmutableField: Private field 'amenities' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:51:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:51:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:52:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:52:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:52:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contractService field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:52:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contractService field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:52:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:52:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:53:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:53:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:54:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:54:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:54:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contractRepo field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:54:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contractRepo field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:54:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:54:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:55:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:55:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:56:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:56:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:56:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplierRepo field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:56:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplierRepo field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:56:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:56:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:57:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:57:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:58:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:58:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:58:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplierService field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:58:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supplierService field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:58:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:58:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:59:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:59:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:60:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:60:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:60:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contractorService field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:60:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contractorService field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:60:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:60:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:61:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:61:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:61:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:61:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:62:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:62:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:62:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:62:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:64:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:64:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:64:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:64:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:65:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:65:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:65:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:65:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:66:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:66:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:66:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:66:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:66:	LongVariable:	LongVariable: Avoid excessively long variable names like anothersauthResponse
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:66:	LongVariable:	LongVariable: Avoid excessively long variable names like anothersauthResponse
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:67:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:67:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:67:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:67:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:68:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:68:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:68:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:68:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:68:	LongVariable:	LongVariable: Avoid excessively long variable names like anothercauthResponse
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:68:	LongVariable:	LongVariable: Avoid excessively long variable names like anothercauthResponse
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:69:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:69:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:69:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:69:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:69:	ImmutableField:	ImmutableField: Private field 'contractDetails' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:69:	ImmutableField:	ImmutableField: Private field 'contractDetails' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:70:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:70:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:70:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:70:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:70:	ImmutableField:	ImmutableField: Private field 'anotherContractDetails' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:70:	ImmutableField:	ImmutableField: Private field 'anotherContractDetails' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:70:	LongVariable:	LongVariable: Avoid excessively long variable names like anotherContractDetails
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:70:	LongVariable:	LongVariable: Avoid excessively long variable names like anotherContractDetails
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:73:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:73:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:75:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:75:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:78:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:78:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:80:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:80:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:94:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:94:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:94:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:94:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:98:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'authResponse' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:98:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'authResponse' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:106:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testCreateOrModifyContract method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:106:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testCreateOrModifyContract method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:106:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:106:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:107:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "token" appears 44 times in this file; the first occurrence is on line 107
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:107:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "token" appears 44 times in this file; the first occurrence is on line 107
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:107:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:107:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:108:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:108:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:111:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:111:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:113:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:113:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:117:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:117:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:118:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:118:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:119:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:119:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:123:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "token1" appears 19 times in this file; the first occurrence is on line 123
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:123:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "token1" appears 19 times in this file; the first occurrence is on line 123
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:123:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:123:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:129:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetCreatedContractsbyStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:129:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetCreatedContractsbyStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:129:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:129:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:130:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:130:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:132:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractIds' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:132:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractIds' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:132:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:132:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:133:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:133:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:133:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:133:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:133:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:133:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:135:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:135:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:136:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:136:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:143:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the anotherTestGetCreatedContractsbyStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:143:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the anotherTestGetCreatedContractsbyStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:144:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:144:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:145:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:145:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:146:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'contractIds' (lines '146'-'151').
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:146:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'contractIds' (lines '146'-'151').
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:146:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractIds' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:146:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractIds' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:146:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:146:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:147:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:147:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:147:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:147:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:147:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:147:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:154:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the YetAnotherTestGetCreatedContractsbyStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:154:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the YetAnotherTestGetCreatedContractsbyStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:154:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:154:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:154:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'YetAnotherTestGetCreatedContractsbyStatus' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:154:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'YetAnotherTestGetCreatedContractsbyStatus' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:155:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:155:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:156:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:156:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:157:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractIds' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:157:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractIds' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:157:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:157:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:158:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:158:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:158:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:158:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:158:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:158:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:160:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:160:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:161:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:161:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:168:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetContractsBySupplierId method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:168:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetContractsBySupplierId method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:168:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:168:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:169:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:169:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contract' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:171:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:171:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:178:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:178:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contracts' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:178:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:178:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:180:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:180:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:181:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:181:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:182:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'contractDetails' (lines '182'-'195').
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:182:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'contractDetails' (lines '182'-'195').
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:182:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractDetails' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:182:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractDetails' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:183:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:183:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:184:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:184:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:184:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:184:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:188:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:188:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:188:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:188:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:193:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:193:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:197:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetContract method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:197:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetContract method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:197:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:197:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:198:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:198:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:199:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:199:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:199:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:199:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:200:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:200:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:201:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:201:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:201:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:201:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:203:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:203:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:208:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the anotherTestGetContract method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:208:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the anotherTestGetContract method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:208:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:208:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:209:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:209:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:210:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:210:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:212:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:212:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:212:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:212:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:213:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:213:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:214:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:214:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:214:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:214:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:216:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:216:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:220:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the yetAnotherTestGetContract method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:220:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the yetAnotherTestGetContract method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:221:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:221:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:222:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:222:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:224:	EmptyStatementNotInLoop:	EmptyStatementNotInLoop: An empty statement (semicolon) not part of a loop
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:224:	EmptyStatementNotInLoop:	EmptyStatementNotInLoop: An empty statement (semicolon) not part of a loop
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:229:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetContractsOfAllSuppliers method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:229:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetContractsOfAllSuppliers method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:229:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:229:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:230:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:230:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:231:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:231:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:232:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractDetails' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:232:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractDetails' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:233:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:233:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:234:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:234:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:234:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:234:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:234:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:234:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:237:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:237:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:237:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:237:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:237:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:237:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:237:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:237:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:242:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:242:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:247:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetActiveContractIds method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:247:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetActiveContractIds method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:247:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:247:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:248:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ids' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:248:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ids' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:248:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:248:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:249:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:249:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:250:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:250:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:250:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'objects' (lines '250'-'251').
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:250:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'objects' (lines '250'-'251').
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:251:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'objects' (lines '251'-'252').
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:251:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'objects' (lines '251'-'252').
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:256:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:256:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:257:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Active" appears 8 times in this file; the first occurrence is on line 257
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:257:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Active" appears 8 times in this file; the first occurrence is on line 257
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:257:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:257:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:258:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:258:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:260:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:260:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:261:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:261:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:262:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:262:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:270:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the anotherTestGetActiveContractIds method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:270:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the anotherTestGetActiveContractIds method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:273:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:273:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:274:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:274:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:281:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetActiveContractsOfALlSuppliers method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:281:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetActiveContractsOfALlSuppliers method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:281:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:281:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:282:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'idList' (lines '282'-'303').
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:282:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'idList' (lines '282'-'303').
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:282:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'idList' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:282:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'idList' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:282:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:282:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:284:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ids' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:284:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ids' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:284:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:284:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:285:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:285:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:287:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:287:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:287:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'objects' (lines '287'-'288').
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:287:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'objects' (lines '287'-'288').
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:288:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'objects' (lines '288'-'289').
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:288:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'objects' (lines '288'-'289').
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:293:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:293:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:294:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:294:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:295:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:295:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:300:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:300:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:305:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetSuppliersofActiveContracts method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:305:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetSuppliersofActiveContracts method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:305:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:305:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:306:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'statuses' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:306:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'statuses' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:306:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:306:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:311:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'suppliers' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:311:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'suppliers' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:314:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplierUtils' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:314:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplierUtils' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:314:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:314:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:316:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'detail' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:316:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'detail' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:318:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:318:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:319:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:319:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:320:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:320:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:320:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:320:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:325:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'anotherStatuses' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:325:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'anotherStatuses' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:325:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:325:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:330:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:330:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:331:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:331:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:331:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:331:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:333:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:333:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:339:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetAllActiveContracts method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:339:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetAllActiveContracts method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:339:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:339:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:340:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractDetails' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:340:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contractDetails' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:341:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:341:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'c' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:342:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:342:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:342:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:342:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:342:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:342:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'details' could be declared final
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:345:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:345:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:346:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:346:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:347:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:347:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:347:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:347:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:347:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:347:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:347:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:347:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:352:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractServiceImplTest.java:352:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:31:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:31:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:31:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:31:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:33:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:33:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:33:	LongVariable:	LongVariable: Avoid excessively long variable names like contractorSerivceImpl
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:33:	LongVariable:	LongVariable: Avoid excessively long variable names like contractorSerivceImpl
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:35:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:35:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:35:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:35:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:40:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:40:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:40:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the map field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:40:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the map field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:40:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:40:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:40:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:40:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:40:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:40:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:43:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetValidity method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:43:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testGetValidity method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:43:	JUnitTestsShouldIncludeAssert:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:43:	JUnitTestsShouldIncludeAssert:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:45:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:45:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:47:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "admin" appears 9 times in this file; the first occurrence is on line 47
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:47:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "admin" appears 9 times in this file; the first occurrence is on line 47
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:48:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "admin123" appears 6 times in this file; the first occurrence is on line 48
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:48:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "admin123" appears 6 times in this file; the first occurrence is on line 48
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:50:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:50:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:51:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "token" appears 7 times in this file; the first occurrence is on line 51
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:51:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "token" appears 7 times in this file; the first occurrence is on line 51
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:51:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:51:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:51:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:51:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:53:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Admin" appears 7 times in this file; the first occurrence is on line 53
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:53:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Admin" appears 7 times in this file; the first occurrence is on line 53
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:53:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'auth' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:53:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'auth' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:54:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:54:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:54:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:54:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:55:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:55:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:55:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:55:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:57:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'userDetails' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:57:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'userDetails' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:58:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'token' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:58:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'token' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:59:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'auth2' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:59:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'auth2' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:61:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:61:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:61:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:61:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:66:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the getValidityFailedTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:66:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the getValidityFailedTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:66:	LinguisticNaming:	LinguisticNaming: Linguistics Antipattern - The getter 'getValidityFailedTest' should not return void linguistically
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:66:	LinguisticNaming:	LinguisticNaming: Linguistics Antipattern - The getter 'getValidityFailedTest' should not return void linguistically
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:68:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:68:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:69:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'auth' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:69:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'auth' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:70:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:70:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:70:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:70:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:74:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:74:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:76:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:76:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:81:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:81:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:81:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:81:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:83:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'userdetails' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:83:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'userdetails' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:84:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:84:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:85:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:85:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:85:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:85:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:86:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:86:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:86:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:86:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:89:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the loadUserByUsernameFailedTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:89:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the loadUserByUsernameFailedTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:95:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the loginTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:95:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the loginTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:97:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:97:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:101:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:101:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:102:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:102:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:102:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:102:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:104:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:104:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:104:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:104:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:106:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'userDetails' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:106:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'userDetails' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:107:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:107:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:107:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:107:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:111:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:111:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:111:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:111:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:111:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:111:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:112:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:112:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:112:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:112:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:115:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the loginFailedTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:115:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the loginFailedTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:117:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:117:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:121:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:121:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:122:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:122:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:122:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:122:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:124:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin2' could be declared final
src/test/java/com/example/contractmanagement/service/ContractorServiceImplTest.java:124:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'admin2' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:34:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:34:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:34:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:34:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:34:	TooManyFields:	TooManyFields: Too many fields
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:34:	TooManyFields:	TooManyFields: Too many fields
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:34:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:34:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:35:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:35:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:35:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:35:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:35:	ImmutableField:	ImmutableField: Private field 'supplierId' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:35:	ImmutableField:	ImmutableField: Private field 'supplierId' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:36:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:36:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:36:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:36:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:38:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:38:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:38:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:38:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:38:	SingularField:	SingularField: Perhaps 'proposals' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:38:	SingularField:	SingularField: Perhaps 'proposals' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:38:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'proposals'.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:38:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'proposals'.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:39:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:39:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:39:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:39:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:40:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:40:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:41:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:41:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:41:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:41:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:42:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:42:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:42:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:42:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:42:	ShortVariable:	ShortVariable: Avoid variables with short names like bd
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:42:	ShortVariable:	ShortVariable: Avoid variables with short names like bd
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:42:	SingularField:	SingularField: Perhaps 'bd' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:42:	SingularField:	SingularField: Perhaps 'bd' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:42:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'bd'.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:42:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'bd'.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:43:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:43:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:43:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:43:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:44:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:44:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:44:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:44:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:45:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:45:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:45:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:45:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:45:	LongVariable:	LongVariable: Avoid excessively long variable names like anothersauthResponse
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:45:	LongVariable:	LongVariable: Avoid excessively long variable names like anothersauthResponse
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:45:	SingularField:	SingularField: Perhaps 'anothersauthResponse' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:45:	SingularField:	SingularField: Perhaps 'anothersauthResponse' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:45:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'anothersauthResponse'.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:45:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'anothersauthResponse'.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:46:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:46:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:46:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:46:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:50:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:50:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:52:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:52:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposal' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:53:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:53:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:57:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:57:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:60:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalDetails' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:60:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalDetails' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:61:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'bd' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:61:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'bd' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:61:	ShortVariable:	ShortVariable: Avoid variables with short names like bd
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:61:	ShortVariable:	ShortVariable: Avoid variables with short names like bd
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:67:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "To Be Revisited" appears 4 times in this file; the first occurrence is on line 67
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:67:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "To Be Revisited" appears 4 times in this file; the first occurrence is on line 67
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:78:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposals' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:78:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposals' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:78:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:78:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:81:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalList' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:81:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'proposalList' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:81:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:81:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:85:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'authResponse' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:85:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'authResponse' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:91:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:91:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:92:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:92:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:92:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the proService field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:92:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the proService field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:92:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:92:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:92:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:92:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:94:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:94:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:95:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:95:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:95:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the proRepo field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:95:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the proRepo field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:95:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:95:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:95:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:95:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:96:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:96:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:97:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:97:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:97:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the reqRepo field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:97:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the reqRepo field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:97:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:97:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:97:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:97:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:98:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:98:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:99:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:99:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:99:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supRepo field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:99:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supRepo field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:99:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:99:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:99:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:99:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:100:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:100:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:101:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:101:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:101:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the conService field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:101:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the conService field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:101:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:101:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:101:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:101:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:103:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:103:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:104:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:104:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:104:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supService field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:104:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supService field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:104:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:104:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:104:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:104:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:107:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the createProposalTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:107:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the createProposalTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:108:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:108:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:109:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:109:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:110:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:110:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:111:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:111:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:111:	UseAssertTrueInsteadOfAssertEquals:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:111:	UseAssertTrueInsteadOfAssertEquals:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:115:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewAllProposalsTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:115:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewAllProposalsTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:116:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:116:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:117:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:117:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:118:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:118:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:122:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the emptyProposalsTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:122:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the emptyProposalsTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:123:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'emptyList' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:123:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'emptyList' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:123:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:123:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:124:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:124:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:125:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:125:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:130:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewProposalByIdTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:130:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewProposalByIdTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:131:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:131:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:132:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:132:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:133:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:133:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:134:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:134:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:140:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewRevisitedProposals method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:140:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewRevisitedProposals method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:141:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:141:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:142:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:142:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:143:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:143:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:147:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the emptyRevisitedProposals method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:147:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the emptyRevisitedProposals method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:148:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'emptyList' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:148:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'emptyList' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:148:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:148:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:149:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:149:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:150:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:150:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:155:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the editProposalStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:155:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the editProposalStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:156:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:156:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:157:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:157:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:158:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:158:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:158:	UseAssertTrueInsteadOfAssertEquals:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:158:	UseAssertTrueInsteadOfAssertEquals:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:162:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the editEmptyStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:162:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the editEmptyStatus method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:163:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:163:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:164:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:164:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:169:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the editEmpty method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:169:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the editEmpty method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:170:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:170:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:171:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:171:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:176:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the editProposal method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:176:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the editProposal method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:177:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:177:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:178:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:178:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:179:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:179:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:179:	UseAssertTrueInsteadOfAssertEquals:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:179:	UseAssertTrueInsteadOfAssertEquals:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:183:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewProposalBySupplierTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:183:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewProposalBySupplierTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:184:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:184:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:185:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:185:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:186:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:186:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:187:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:187:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:191:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the emptyProposalBySupplier method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:191:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the emptyProposalBySupplier method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:192:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'emptyList' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:192:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'emptyList' could be declared final
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:192:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:192:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:193:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:193:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:194:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:194:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:195:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/ProposalServiceImplTest.java:195:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:32:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:32:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:32:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:32:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:32:	TooManyFields:	TooManyFields: Too many fields
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:32:	TooManyFields:	TooManyFields: Too many fields
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:34:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:34:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:34:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:34:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:34:	ImmutableField:	ImmutableField: Private field 'typeId' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:34:	ImmutableField:	ImmutableField: Private field 'typeId' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:35:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:35:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:35:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:35:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:35:	ImmutableField:	ImmutableField: Private field 'supplierId' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:35:	ImmutableField:	ImmutableField: Private field 'supplierId' could be made final; it is only initialized in the declaration or constructor.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:36:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:36:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:36:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:36:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:38:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:38:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:38:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:38:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:39:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:39:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:39:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:39:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:39:	LongVariable:	LongVariable: Avoid excessively long variable names like requirementDetails
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:39:	LongVariable:	LongVariable: Avoid excessively long variable names like requirementDetails
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:40:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:40:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:40:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the token field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:40:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the token field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:40:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:40:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:41:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:41:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:41:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'supplier'.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:41:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'supplier'.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:42:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:42:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:42:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:42:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:43:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:43:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:43:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:43:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:43:	LongVariable:	LongVariable: Avoid excessively long variable names like anothersauthResponse
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:43:	LongVariable:	LongVariable: Avoid excessively long variable names like anothersauthResponse
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:43:	SingularField:	SingularField: Perhaps 'anothersauthResponse' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:43:	SingularField:	SingularField: Perhaps 'anothersauthResponse' could be replaced by a local variable.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:43:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'anothersauthResponse'.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:43:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'anothersauthResponse'.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:44:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:44:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:44:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:44:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:46:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:46:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:48:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:48:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirement' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:49:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:49:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:50:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirementDetails' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:50:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirementDetails' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:50:	LongVariable:	LongVariable: Avoid excessively long variable names like requirementDetails
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:50:	LongVariable:	LongVariable: Avoid excessively long variable names like requirementDetails
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:65:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirements' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:65:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirements' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:65:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:65:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:69:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'authResponse' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:69:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'authResponse' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:76:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:76:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:77:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:77:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:77:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the reqService field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:77:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the reqService field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:77:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:77:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:77:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:77:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:79:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:79:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:80:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:80:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:80:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the conService field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:80:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the conService field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:80:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:80:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:80:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:80:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:82:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:82:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:83:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:83:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:83:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supService field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:83:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the supService field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:83:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:83:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:83:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:83:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:87:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:87:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:88:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:88:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:88:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the reqRepo field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:88:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the reqRepo field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:88:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:88:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:88:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:88:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:90:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:90:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:91:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:91:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:91:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the typeRepo field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:91:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the typeRepo field if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:91:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:91:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:91:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:91:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:94:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the createRequirementTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:94:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the createRequirementTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:95:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:95:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:96:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:96:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:96:	UseAssertTrueInsteadOfAssertEquals:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:96:	UseAssertTrueInsteadOfAssertEquals:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:100:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewAllRequirementsAdminTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:100:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewAllRequirementsAdminTest method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:101:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirements1' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:101:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirements1' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:101:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:101:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:102:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:102:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:102:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:102:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:102:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'r' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:102:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'r' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:103:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'requirementIds' (lines '103'-'108').
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:103:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'requirementIds' (lines '103'-'108').
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:103:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirementIds' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:103:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirementIds' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:103:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:103:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:104:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:104:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:104:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:104:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:104:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'r' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:104:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'r' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:105:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:105:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:106:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:106:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:107:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:107:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:107:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:107:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:110:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewEmptyRequirements method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:110:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewEmptyRequirements method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:111:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'emptyList' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:111:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'emptyList' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:111:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:111:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:112:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'authr' (lines '112'-'116').
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:112:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'authr' (lines '112'-'116').
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:112:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'authr' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:112:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'authr' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:112:	UnusedLocalVariable:	UnusedLocalVariable: Avoid unused local variables such as 'authr'.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:112:	UnusedLocalVariable:	UnusedLocalVariable: Avoid unused local variables such as 'authr'.
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:113:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:113:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:114:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:114:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:119:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewAllRequirementsBySupplier method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:119:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewAllRequirementsBySupplier method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:120:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirements1' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:120:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirements1' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:120:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:120:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:121:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:121:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:121:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:121:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:121:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'r' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:121:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'r' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:122:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirementIds' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:122:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'requirementIds' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:122:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:122:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:123:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:123:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:123:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:123:	ForLoopsMustUseBraces:	ForLoopsMustUseBraces: Avoid using for statements without curly braces
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:123:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'r' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:123:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'r' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:124:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:124:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:125:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:125:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:126:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:126:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:127:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:127:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:131:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewEmptyRequirementsBySupplier method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:131:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewEmptyRequirementsBySupplier method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:132:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'emptyList' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:132:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'emptyList' could be declared final
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:132:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:132:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:133:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:133:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:134:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:134:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:135:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:135:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:140:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewRequirementById method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:140:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the viewRequirementById method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:141:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:141:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:142:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:142:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:144:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:144:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:148:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the editRequirement method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:148:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the editRequirement method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:149:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:149:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:150:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:150:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:151:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:151:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:151:	UseAssertTrueInsteadOfAssertEquals:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:151:	UseAssertTrueInsteadOfAssertEquals:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:155:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the deleteRequirement method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:155:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the deleteRequirement method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:156:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:156:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:157:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:157:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:157:	UseAssertTrueInsteadOfAssertEquals:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
src/test/java/com/example/contractmanagement/service/RequirementServiceImplTest.java:157:	UseAssertTrueInsteadOfAssertEquals:	UseAssertTrueInsteadOfAssertEquals: Use assertTrue(x)/assertFalse(x) instead of assertEquals(true, x)/assertEquals(false, x) or assertEquals(Boolean.TRUE, x)/assertEquals(Boolean.FALSE, x).
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:33:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:33:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:33:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:33:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:35:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:35:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:35:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:35:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:39:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:39:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:39:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:39:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:41:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:41:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:41:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:41:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:45:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:45:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:47:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:47:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:49:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "type1" appears 7 times in this file; the first occurrence is on line 49
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:49:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "type1" appears 7 times in this file; the first occurrence is on line 49
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:50:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:50:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:52:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "supplier" appears 19 times in this file; the first occurrence is on line 52
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:52:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "supplier" appears 19 times in this file; the first occurrence is on line 52
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:53:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "supplier@supplier" appears 9 times in this file; the first occurrence is on line 53
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:53:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "supplier@supplier" appears 9 times in this file; the first occurrence is on line 53
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:57:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:57:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:57:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:57:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:58:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Supplier" appears 4 times in this file; the first occurrence is on line 58
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:58:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Supplier" appears 4 times in this file; the first occurrence is on line 58
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:59:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'userdetails' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:59:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'userdetails' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:60:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:60:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:61:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:61:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:61:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:61:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:62:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:62:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:62:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:62:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:66:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:66:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:67:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:67:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:70:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:70:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:76:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'data' (lines '76'-'80').
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:76:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'data' (lines '76'-'80').
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:76:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:76:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:76:	UnusedLocalVariable:	UnusedLocalVariable: Avoid unused local variables such as 'data'.
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:76:	UnusedLocalVariable:	UnusedLocalVariable: Avoid unused local variables such as 'data'.
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:83:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:83:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:84:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:84:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:87:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:87:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:93:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:93:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:94:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:94:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:94:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:94:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:96:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:96:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'list' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:96:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:96:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:98:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'userDetails' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:98:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'userDetails' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:99:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "token" appears 7 times in this file; the first occurrence is on line 99
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:99:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "token" appears 7 times in this file; the first occurrence is on line 99
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:99:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:99:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:99:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:99:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:101:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'map' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:101:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'map' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:101:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:101:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:101:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:101:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:104:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:104:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:104:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:104:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:104:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:104:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:105:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:105:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:105:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:105:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:109:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:109:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:111:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:111:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:114:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:114:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:120:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:120:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:121:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:121:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:121:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:121:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:124:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type2' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:124:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type2' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:127:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier2' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:127:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier2' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:138:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:138:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:138:	JUnitTestsShouldIncludeAssert:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:138:	JUnitTestsShouldIncludeAssert:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:139:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:139:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:142:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:142:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:149:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:149:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:150:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'res' (lines '150'-'161').
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:150:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'res' (lines '150'-'161').
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:150:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'res' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:150:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'res' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:150:	UnusedLocalVariable:	UnusedLocalVariable: Avoid unused local variables such as 'res'.
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:150:	UnusedLocalVariable:	UnusedLocalVariable: Avoid unused local variables such as 'res'.
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:151:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:151:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:151:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:151:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:152:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'auth' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:152:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'auth' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:153:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:153:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:153:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:153:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:154:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'auth2' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:154:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'auth2' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:159:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:159:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:159:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:159:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:163:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testValidityFailed method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:163:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testValidityFailed method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:165:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:165:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:166:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'auth' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:166:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'auth' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:167:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:167:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:167:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:167:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:171:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testSignUpSuccess method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:171:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testSignUpSuccess method if you want a default access modifier
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:172:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:172:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'type' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:175:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:175:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'supplier' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:182:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'suppDetails' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:182:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'suppDetails' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:184:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'dataSupp' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:184:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'dataSupp' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:185:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'dataType' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:185:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'dataType' could be declared final
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:186:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:186:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:186:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:186:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:187:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:187:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:187:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:187:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:188:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:188:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:188:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:188:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:189:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:189:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:189:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/service/SupplierServiceImplTest.java:189:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:7:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:7:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:7:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:7:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:9:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:9:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:9:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contractDetails field if you want a default access modifier
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:9:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contractDetails field if you want a default access modifier
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:9:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:9:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:9:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:9:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:10:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:10:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:10:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the anotherContractDetails field if you want a default access modifier
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:10:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the anotherContractDetails field if you want a default access modifier
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:10:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:10:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:10:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:10:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:10:	LongVariable:	LongVariable: Avoid excessively long variable names like anotherContractDetails
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:10:	LongVariable:	LongVariable: Avoid excessively long variable names like anotherContractDetails
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:12:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test method if you want a default access modifier
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:12:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test method if you want a default access modifier
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:12:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:12:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:14:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:14:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:16:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:16:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:18:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:18:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:20:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:20:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:22:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:22:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:24:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:24:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:26:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:26:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:27:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ContractDetailsTest.java:27:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:9:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:9:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:9:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:9:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:11:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:11:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:11:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the proposal field if you want a default access modifier
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:11:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the proposal field if you want a default access modifier
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:11:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:11:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:11:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:11:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:14:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test method if you want a default access modifier
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:14:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test method if you want a default access modifier
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:14:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:14:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:16:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:16:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:18:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:18:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:19:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'bd' could be declared final
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:19:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'bd' could be declared final
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:19:	ShortVariable:	ShortVariable: Avoid variables with short names like bd
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:19:	ShortVariable:	ShortVariable: Avoid variables with short names like bd
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:21:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:21:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:23:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:23:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:25:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:25:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:27:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/ProposalDetailsTest.java:27:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:9:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:9:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:9:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:9:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:11:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:11:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:11:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the requirement field if you want a default access modifier
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:11:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the requirement field if you want a default access modifier
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:11:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:11:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:11:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:11:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:14:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testId method if you want a default access modifier
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:14:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testId method if you want a default access modifier
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:16:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:16:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:20:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testDescription method if you want a default access modifier
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:20:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testDescription method if you want a default access modifier
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:21:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Some Text" appears 4 times in this file; the first occurrence is on line 21
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:21:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "Some Text" appears 4 times in this file; the first occurrence is on line 21
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:22:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:22:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:26:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testDeliveryDate method if you want a default access modifier
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:26:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testDeliveryDate method if you want a default access modifier
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:28:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:28:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:32:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testType method if you want a default access modifier
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:32:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testType method if you want a default access modifier
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:34:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/RequirementDetailsTest.java:34:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:8:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:8:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:8:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:8:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:9:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:9:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:9:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the util field if you want a default access modifier
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:9:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the util field if you want a default access modifier
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:9:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:9:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:9:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:9:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:10:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "1231231231" appears 4 times in this file; the first occurrence is on line 10
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:10:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "1231231231" appears 4 times in this file; the first occurrence is on line 10
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:10:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "delhi" appears 4 times in this file; the first occurrence is on line 10
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:10:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "delhi" appears 4 times in this file; the first occurrence is on line 10
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:10:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "supplier" appears 6 times in this file; the first occurrence is on line 10
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:10:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "supplier" appears 6 times in this file; the first occurrence is on line 10
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:10:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "type 1" appears 4 times in this file; the first occurrence is on line 10
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:10:	AvoidDuplicateLiterals:	AvoidDuplicateLiterals: The String literal "type 1" appears 4 times in this file; the first occurrence is on line 10
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:10:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:10:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:10:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the util2 field if you want a default access modifier
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:10:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the util2 field if you want a default access modifier
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:10:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:10:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:10:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:10:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:13:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:13:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:15:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:15:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:18:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:18:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:20:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:20:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:23:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:23:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:25:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:25:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:28:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:28:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:30:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:30:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:33:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:33:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:35:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:35:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:38:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:38:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:39:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:39:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:39:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:39:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:42:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:42:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:42:	LinguisticNaming:	LinguisticNaming: Linguistics Antipattern - The transform method 'toStringTest' should not return void linguistically
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:42:	LinguisticNaming:	LinguisticNaming: Linguistics Antipattern - The transform method 'toStringTest' should not return void linguistically
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:48:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:48:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:48:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/example/contractmanagement/util/SupplierUtilTest.java:48:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
